// get joystick state, SDL module
//
//
#include <intr.l1h>
(main func)
	(set int64 1 zero 0)
	(set int64 1 one 1)
	(set int64 1 two 2)
	(set int64 1 f 0)
	(set int64 1 width 300)
	(set int64 1 height 200)
	(set int64 1 bit 32)
	(set int64 1 ret 0)
	(set int64 1 x 0)
	(set int64 1 y 0)
	(set int64 1 joy_x_axis 0)
	(set int64 1 joy_y_axis 0)
	(set int64 1 joy_x2_axis 0)
	(set int64 1 joy_y2_axis 0)
	(set int64 1 joy_axis_max 0)
	(set int64 1 joy_buttons_max 0)
	(set string 256 joy_namestr "")
	(set int64 1 joy_name_len 255)
	(set int64 1 joy_button 0)
	(set int64 1 joy_button_state)
	(set string s joy_x_axisstr "joystick x axis: ")
	(set string s joy_y_axisstr "joystick y axis: ")
	(set string s joy_x2_axisstr "joystick x2 axis: ")
	(set string s joy_y2_axisstr "joystick y2 axis: ")
	(set string s button_str "button: ")
	(set string s joy_name_infostr "joystick name: ")
	// open screen
    (zero width height bit zero :sdl_open_screen !)
	(ret stpopi)
	(loadreg)
	// get joystick info
	(joy_namestraddr :sdl_get_joystick_info !)
	(joy_axis_max stpopi)
	(joy_buttons_max stpopi)
	(loadreg)
	print_s (joy_name_infostr)
	print_s (joy_namestr)
	print_n
	(:loop)
	(:sdl_get_joystick_x_axis !)
	(joy_x_axis stpopi)
	(loadreg)
	(:sdl_get_joystick_y_axis !)
	(joy_y_axis stpopi)
	(loadreg)
	// check if more than two axis
	(((joy_axis_max two >) f =) f if)
		(:sdl_get_joystick_x2_axis !)
		(joy_x2_axis stpopi)
		(loadreg)
		(:sdl_get_joystick_y2_axis !)
		(joy_y2_axis stpopi)
		(loadreg)
	(endif)
	(joy_button :sdl_get_joystick_button !)
	(joy_button_state stpopi)
	(loadreg)
	print_s (joy_x_axisstr)
	print_i (joy_x_axis)
	print_n
	print_s (joy_y_axisstr)
	print_i (joy_y_axis)
	print_n
	(((joy_axis_max two >) f =) f if)
		print_s (joy_x2_axisstr)
		print_i (joy_x2_axis)
		print_n
		print_s (joy_y2_axisstr)
		print_i (joy_y2_axis)
		print_n
	(endif)
	print_s (button_str)
	print_i (joy_button_state)
	print_n
	print_n
	(:loop jmp)
(funcend)
#include <sdl-lib.l1h>
