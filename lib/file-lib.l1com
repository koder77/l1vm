// file library module
// test program
//
//
#include <intr-func.l1h>
(main func)
    #include <file-def.l1h>
    (set int64 1 zero 0)
    (set int64 1 one 1)
    (set int64 1 handle 0)
    (set int64 1 num 12345678Q)
    (set int64 1 read 0)
    (set string s filename "test-file")
    (set string s hellostr "hello world!")
    (set string 30 readstr "")
    (set int64 1 readlen 29)
    (set byte 1 newline 10)
    (set byte 1 mode_write 2)
    (set byte 1 mode_read 1)
    (set byte 1 mode_readwrite 3)
    (set int64 1 error 0)
    (set int64 1 ret 0)
    (set int64 1 f 0)
    (set string s error_init_files "error: can't allocate file handles!")
(set string s error_open_file "error: can't open file test-file!")
    (set string s write_error "error writing file!")
    (set string s read_error "error reading file!")
    //
    // set numbers of file handles to one: 1
    //
    (zero one :file_init call)
    (ret stpopi)
    (((ret zero !=) f =) f if)
        (error_init_files :print_s !)
        (:print_n !)
        (:file_free_mem !)
        (zero :free_mod !)
        (one :exit !)
     (endif)

    // write data -----------------------------------------
    (mode_write filenameaddr :file_open !)
    //
    // get file handle from file_open call
    //
    (handle stpopi)
    (((handle zero <) f =) f if)
        (error_open_file :print_s !)
        (:print_n !)
        (:file_free_mem !)
        (zero :free_mod !)
        (one :exit !)
    (endif)

    (handle num :file_put_int64 !)
    (error stpopi)
    (((error zero !=) f =) f if)
        (write_error :print_s !)
        (:print_n !)
        (handle :file_close !)
        (:file_free_mem !)
        (zero :free_mod !)
        (one :exit !)
    (endif)

    (handle hellostraddr :file_put_string !)
    (error stpopi)
    (((error zero !=) f =) f if)
        (write_error :print_s !)
        (:print_n !)
        (handle :file_close !)
        (:file_free_mem !)
        (zero :free_mod !)
        (one :exit !)
    (endif)
    (handle :file_close call)

    // read data ------------------------------------------
    (mode_read filenameaddr :file_open call)
    //
    // get file handle from file_open call
    //
    (handle stpopi)
    (((handle zero <) f =) f if)
        (error_open_file :print_s !)
        (:print_n !)
        (:file_free_mem !)
        (zero :free_mod !)
        (one :exit !)
    (endif)

    (handle :file_get_int64 !)
    (error stpopi)
    (read stpopi)
    (((error zero !=) f =) f if)
        (read_error :print_s !)
        (:print_n !)
        (handle :file_close !)
        (:file_free_mem !)
        (zero :free_mod !)
        (one :exit !)
    (endif)

    (handle readstraddr readlen :file_get_string call)
    (error stpopi)
    (((error zero !=) f =) f if)
        (read_error :print_s !)
        (:print_n !)
        (handle :file_close !)
        (:file_free_mem !)
        (zero :free_mod !)
        (one :exit !)
    (endif)

    (readstr :print_s !)
    (:print_n !)
    (read :print_i !)
    (:print_n !)

    (handle :file_close !)
    (:file_free_mem !)
    (zero :free_mod !)
    (zero :exit !)
(funcend)
#include <file-lib.l1h>
