// file library module
// test program
//
//
#include <intr.l1h>
(main func)
    (set int64 1 zero 0)
	(set int64 1 one 1)
    (set int64 1 handle 0)
    (set int64 1 num 12345678Q)
    (set int64 1 read 0)
    (set string s filename "test-file")
    (set string s hellostr "hello world!")
    (set string 30 readstr "")
    (set int64 1 readlen 29)
    (set byte 1 newline 10)
    (set byte 1 mode_write 2)
    (set byte 1 mode_read 1)
    (set int64 1 error 0)
	(set int64 1 ret 0)
	(set int64 1 f 0)
	(set string s error_init_files "error: can't allocate file handles!")
	(set string s error_open_file "error: can't open file test-file!")
	//
	// set numbers of file handles to one: 1
	//
    (zero one :file_init call)
	(ret stpopi)
	(loadreg)
	(((ret zero !=) f =) f if)
		(6 error_init_files 0 0 intr0)
		(7 0 0 0 intr0)
		(255 one 0 0 intr0)
	(endif)
	(4 ret 0 0 intr0)
	(7 0 0 0 intr0)
	(reset-reg)
    // write data -----------------------------------------
    (mode_write filenameaddr :file_open call)
	//
	// get file handle from file_open call
	//
    (handle stpopi)
	(loadreg)
	(4 handle 0 0 intr0)
	(7 0 0 0 intr0)
	(((handle zero <) f =) f if)
		(6 error_open_file 0 0 intr0)
		(7 0 0 0 intr0)
		(255 one 0 0 intr0)
	(endif)
    (handle num :file_put_int64 call)
    (error stpopi)
    (loadreg)
    (handle hellostraddr :file_put_string call)
    (error stpopi)
    (loadreg)
	(reset-reg)
    (handle newline :file_putc call)
    (error stpopi)
	stack_check
    (handle :file_close call)
    (loadreg)
    // read data ------------------------------------------
    (handle mode_read filenameaddr :file_open call)
    (error stpopi)
    (loadreg)
    (handle :file_get_int64 call)
    (error stpopi)
    (read stpopi)
    (loadreg)
    (4 read 0 0 intr0)
    (7 0 0 0 intr0)
    (handle readstraddr readlen :file_get_string call)
    (error stpopi)
    (loadreg)
    (6 readstraddr 0 0 intr0)
    (7 0 0 0 intr0)
    (handle :file_close call)
    (loadreg)
    // close file module
	(:file_free_mem call)
	(loadreg)
    (1 zero 0 0 intr0)
    (255 0 0 0 intr0)
(funcend)
#include <file-lib.l1h>
