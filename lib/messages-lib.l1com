// messages-lib.l1com
//
// message send/receive module
// sends message number codes
// needs "mem-lib.l1h" to be included
#include <intr.l1h>
(main func)
	(set const-int64 1 zero 0)
	(set const-int64 1 one 1)
	(set const-int64 1 memalloc 1)
	(set int64 1 ret 0)
	(set int64 1 memaddr 0)
	(set int64 1 message 2021)
	(set int64 1 message_read 0)
	(set string s meminitstr "ERROR can't init memory")
	(set string s memerrstr "ERROR can't allocate memory!")
	(set string s messagestr "got message!")
	(set int64 1 f 0)
	(set int64 1 lock 0)
	(zero memalloc :mem_init !)
	(ret stpopi)
	(((ret zero !=) f =) f if)
		// ERROR can't allocate memory
		print_s (meminitstr)
		print_n
		exit (one)
	(endif)
	(:msg_init !)
	(memaddr stpopi)
	(((memaddr zero <) f =) f if)
		print_s (memerrstr)
		print_n
		exit (one)
	(endif)
	// all ok, send message
	(memaddr message lock :msg_put_message !)
	// get message wait
	(memaddr message lock :msg_wait_message !)
	(ret stpopi)
	print_i (ret)
	print_n
	(((ret zero ==) f =) f if)
		print_s (messagestr)
		print_n
	(endif)
	// all ok, send message
	(memaddr message lock :msg_put_message !)
	// get message poll
	(memaddr message lock :msg_poll_message !)
	(ret stpopi)
	print_i (ret)
	print_n
	(((ret zero ==) f =) f if)
		print_s (messagestr)
		print_n
	(endif)
	exit (zero)
(funcend)
#include <mem-lib.l1h>
#include <messages-lib.l1h>
