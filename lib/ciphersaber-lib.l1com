// ciphersaber-lib.l1com
//
// encrypt/decrypt demo
//
#include <intr.l1h>
(main func)
    (set int64 1 zero 0)
	(set int64 1 one 1)
    (set string s inputstr "input.txt")
    (set string s outputstr "output-encr.txt")
    (set string s outputdecrstr "output-decr.txt")
    (set string 256 keystr "test12345")
    (set const-int64 1 Pin 0)
    (set const-int64 1 Pout 0)
    (set const-int64 1 Pkeystr 0)
    (set const-int64 1 Pdecrypt 0)
    (set string 256 keystr "swordfish")
    (set string s okstr "ciphersaber decrypt/encrypt ok!")
    (set string s errstr "ciphersaber decrypt/encrypt ERROR!")
    (set int64 1 ret 0)
    (set int64 1 f 0)
    (set int64 1 mode 0)
    (inputstr Pin pointer)
    (outputstr Pout pointer)
    (keystr Pkeystr pointer)
    (outputdecrstr Pdecrypt pointer)
    (zero :ciphersaber_init !)
    // encrypt
    (Pin Pout Pkeystr mode :ciphersaber !)
    (ret stpop)
    (((ret zero !=) f =) f if)
        print_s (errstr)
        print_n
        (:end_err jmp)
    (endif)

    // dercrypt
    (one mode =)
    (Pout Pdecrypt Pkeystr mode :ciphersaber !)
    (ret stpop)
    (((ret zero !=) f =) f if)
        print_s (errstr)
        print_n
        (:end jmp)
    (endif)

    (:end jmp)

    (:end_err)
    free_mod (zero)
    exit (one)

    (:end)
    exit (zero)
(funcend)
#include <ciphersaber.l1h>
