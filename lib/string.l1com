// now with string array demo
(main func)
    (set int64 1 zero 0)
	(set int64 1 one 1)
    (set string 14 hellostr "Hello")
    (set string s worldstr " world!")
	(set string 15 hellostr2 "")
	(set string 15 worldstr2 "")
	(set string 2 dotstr ",")
    (set int64 1 slen 0)
    (set string 30 bufstr "")
    (set int64 1 buflen 29)
    (set int64 1 bytenum 42)
	(set int64 1 hello_len 5)
	(set int64 1 world_len 6)
	(set int64 1 mid_pos 6)
	(set int64 1 dot_pos 5)
	//
	// set array with 30 chars
	// and 15 chars length for array strings
	(set string 30 arraystr "")
	(set int64 1 array_size 30)
	(set int64 1 string_len 15)
	(set string s regexstr "[A-Z]")
	(set string s regexsrcstr "Abcdefgh")
	(set string s regex_foundstr "regex: pattern found!")
	(set string s regex_notfoundstr "regex: pattern not found!")
    (set string s json_infostr "JSON get values:")
    // (set string s jsonstr "@@qtest@@q: @@qkey test@@q")
    (set string s jsonstr "@@qtest@@q: 12345.6789")
    (set string 256 keystr "")
    (set string 256 valuestr "")
    (set int64 1 maxlen 255)
	(set int64 1 ret 0)
	(set int64 1 f 0)
    (zero :string_init call)
	(loadreg)
	// copy hellostr to array
	(hellostraddr arraystraddr zero string_len array_size :string_to_array call)
	(loadreg)
	// copy worldstr to array
	(worldstraddr arraystraddr one string_len array_size :string_to_array call)
    (loadreg)
	// get strings from array
	(arraystraddr hellostr2addr zero string_len array_size :array_to_string call)
	(loadreg)
	(arraystraddr worldstr2addr one string_len array_size :array_to_string call)
	(loadreg)
	(6 hellostr2 0 0 intr0)
	(6 worldstr2 0 0 intr0)
	(7 0 0 0 intr0)
	(7 0 0 0 intr0)
    (hellostraddr worldstraddr :string_cat call)
    (loadreg)
    (6 hellostr 0 0 intr0)
    (7 0 0 0 intr0)
    (hellostraddr :string_len call)
    (slen stpopi)
    (loadreg)
    (4 slen 0 0 intr0)
    (7 0 0 0 intr0)
	(hellostraddr hellostr2addr hello_len :string_left call)
	(loadreg)
	(6 hellostr2 0 0 intr0)
	(7 0 0 0 intr0)
	(hellostraddr worldstr2addr world_len :string_right call)
	(loadreg)
	(6 worldstr2 0 0 intr0)
	(7 0 0 0 intr0)
    (slen bufstr buflen :string_int64tostring call)
    (loadreg)
    (6 bufstr 0 0 intr0)
    (7 0 0 0 intr0)
    (bytenum bufstr buflen :string_bytetohexstring call)
    (loadreg)
    (6 bufstr 0 0 intr0)
    (7 0 0 0 intr0)
	// get char at positon mid_pos in hellostr
	(hellostraddr bufstr mid_pos :string_mid call)
	(loadreg)
	(6 bufstr 0 0 intr0)
    (7 0 0 0 intr0)
	(dotstraddr hellostraddr dot_pos :string_to_string call)
	(loadreg)
	(6 hellostr 0 0 intr0)
	(7 0 0 0 intr0)
	// check regex function:
	(regexsrcstraddr regexstr :string_regex call)
	(ret stpopi)
	(((ret zero ==) f =) f if+)
		(6 regex_foundstr 0 0 intr0)
		(7 0 0 0 intr0)
	(else)
		(6 regex_notfoundstr 0 0 intr0)
		(7 0 0 0 intr0)
	(endif)

    // JSON parse function
    (6 json_infostr 0 0 intr0)
    (7 0 0 0 intr0)
    (6 jsonstr 0 0 intr0)
    (7 0 0 0 intr0)
    (jsonstr keystr valuestr maxlen :string_parse_json !)
    (ret stpop)
    (4 ret 0 0 intr0)
    (7 0 0 0 intr0)
    (6 keystr 0 0 intr0)
    (7 0 0 0 intr0)
    (6 valuestr 0 0 intr0)
    (7 0 0 0 intr0)
	(255 0 0 0 intr0)
(funcend)
#include <string.l1h>
