// Cells FANN wrapper library for L1VM
//
// New: added return value checks on alloc Cells calls
//
(main func)
	(set int64 1 zero 0)
	(set int64 1 one 1)
	(set int64 1 ret 0)
	(set int64 1 max_cells 1)
	(set int64 1 cell 0)
	(set int64 1 node_xor 0)
	(set int64 1 inputs 2)
	(set int64 1 outputs 1)
	(set int64 1 max_layers 1)
	(set int64 1 cell_neurons 3)
	(set double 2 node_xor_inputsf 1.0 0.0)
	(set double 1 node_xor_outputsf 0.0)
	// following data addresses taken from assembly output!
	(set int64 1 node_xor_inputsfaddr 80)
	(set int64 1 node_xor_outputsfaddr 96)
	(set double 1 outputf 0.0)
	(set int64 1 outputfaddr 120)
	(set int64 1 layer_zero 0)
	(set int64 1 layer_one 1)
	(set int64 1 ret 0)
	(set double 1 zerof 0.0)
	(set double 1 onef 1.0)
	(set int64 1 offset 8)
	(set int64 1 f 0)
	(set int64 1 max_layer_readout 0)
	// following data address taken from assembly output!
	(set int64 1 max_layer_readout_addr 184)
	// set path to "xor_float.net" file of Cells C library:
	(set string s node_xor_filestr "fann/xor_float.net")
	(zero max_cells :cells_init_lib call)
	(ret stpopi)
	(loadreg)
	(((ret zero !=) f =) f if)
		(255 0 0 0 intr0)
	(endif)
	// allocate memory for cell neurons
	(max_cells cell_neurons :cells_alloc_neurons_equal call)
	(ret stpopi)
	(loadreg)
	(((ret zero !=) f =) f if)
		(:cells_dealloc call)
		(loadreg)
		(255 0 0 0 intr0)
	(endif)
	// read FANN from file
	(cell node_xor node_xor_filestraddr inputs outputs node_xor_inputsfaddr node_xor_outputsfaddr layer_zero one :cells_fann_read_ann call)
	(ret stpopi)
	(loadreg)
	(4 ret 0 0 intr0)
	(7 0 0 0 intr0)
	(7 0 0 0 intr0)
	(((ret zero !=) f =) f if)
		// dealloc neurons
		(max_cells :cells_dealloc_neurons call)
		(ret stpopi)
		(loadreg)
		(:cells_dealloc call)
		(loadreg)
		(255 0 0 0 intr0)
	(endif)
	(cell node_xor :cells_fann_run_ann call)
	(ret stpopi)
	(loadreg)
	(cell node_xor zero outputfaddr :cells_fann_get_output call)
	(ret stpopi)
	(loadreg)
	(5 outputf 0 0 intr0)
	(7 0 0 0 intr0)
	// update ANN
	(zerof node_xor_inputsf [ zero ] =)
	(zerof node_xor_inputsf [ offset ] =)
	(reset-reg)
	(cell node_xor inputs node_xor_inputsfaddr :cells_fann_do_update_ann call)
	(ret stpopi)
	(loadreg)
	(cell node_xor :cells_fann_run_ann call)
	(ret stpopi)
	(loadreg)
	(cell node_xor zero outputfaddr :cells_fann_get_output call)
	(ret stpopi)
	(loadreg)
	(5 outputf 0 0 intr0)
	(7 0 0 0 intr0)
	(reset-reg)
	(zero zero max_layer_readout_addr :cells_fann_get_max_layer call)
	(ret stpopi)
	(loadreg)
	(4 max_layer_readout 0 0 intr0)
	(7 0 0 0 intr0)
	// dealloc neurons
	(max_cells :cells_dealloc_neurons call)
	(ret stpopi)
	(loadreg)
	(:cells_dealloc call)
	(loadreg)
	(255 ret 0 0 intr0)
(funcend)
#include <cells-lib.l1h>
