// json.l1com
//
// you have to include: mem-obj-lib.l1h and string.l1h
//
#include <intr.l1h>
(main func)
    (set const-int64 1 zero 0)
	(set int64 1 one 1)
	(set int64 1 two 2)
	(set int64 1 memaddr 0)
    (set int64 1 entries 0)
    (set int64 1 max_entries 0)
    (set int64 1 Pjson_str)
    (set string 4096 json_str "{@@qname@@q:@@qJohn@@q, @@qage@@q:@@q39@@q, @@qcity@@q:@@qNew York@@q}")
    //(set string s json_str "@@qauthor@@q: {")
    (set string s mem_error_allocstr "ERROR: can't allocate mem object!")
    (set string 4096 key_str "")
    (set string 4096 value_str "")
    (set int64 1 f 0)
    (set int64 1 i 0)
    (set int64 1 j 0)
    (set int64 1 ret 0)
    (set string s namek_str "name")
    (set string s namev_str "John")
    (set string s agek_str "age")
    (set string s agev_str "39")
    (set string s cityk_str "city")
    (set string s cityv_str "New York")
    (set string s get_json_str "Get JSON entries of string by 'parse_json'")
    (set string s create_json_str "Create JSON string by 'create_json'.")
    (set string s space_str " ")

    (zero :string_init !)
    (one one :mem_obj_init call)
	(ret stpopi)
	(loadreg)
	(((ret zero !=) f =) f if)
		// ERROR can't allocate memory
		print_s (mem_error_allocstr)
	    print_n
        exit (one)
	(endif)

    print_s (get_json_str)
    print_n
    // print json string
    print_s (json_str)
    print_n

    (json_str Pjson_str pointer)
    (Pjson_str zero :parse_json !)
    (entries memaddr stpop)
    print_n
    print_i (memaddr)
    print_n
    print_i (entries)
    print_n

    {max_entries = (entries * two) - one}
    (do)
        (i memaddr key_str :load_obj_string_memobj !)
        print_s (key_str)
        print_s (space_str)
        ((i one +) j =)
        (j memaddr value_str :load_obj_string_memobj !)
        print_s (value_str)
        print_n
        {i = (i + two )}
    (((i max_entries <) f =) f while)

    print_n
    print_s (create_json_str)
    print_n
    // create JSON string
    (cityv_str cityk_str agev_str agek_str namev_str namek_str entries Pjson_str :create_json !)
    // print JSON
    print_s (Pjson_str)
    print_n

    exit (zero)
(funcend)

#include <string.l1h>
#include <mem-obj-lib.l1h>
#include <json.l1h>
