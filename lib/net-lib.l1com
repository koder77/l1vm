//  net-lib.l1com
//
//  network library for TCP/IP sockets
//
// demo waits for a telnet connection on port 3000
// and prints ASCII code of sent char
//
//  NEW: added functions for connecting with libl1vm-data database
#include <intr.l1h>
(main func)
    (set int64 1 zero 0)
    (set int64 1 one 1)
 	(set int64 1 server 0)
	(set int64 1 accept 0)
	(set int64 1 portnum 3000Q)
	(set int64 1 error 0)
	(set int64 1 server_open 0)
	(set int64 1 server_accept 0)
	(set int64 1 f 0)
	(set string 10 ip "127.0.0.1")
    (set int64 1 ip_len 10)
    (set int64 1 ret 0)
    (set int64 1 f 0)
    (set string 30 buf "                             ")
    (set int64 1 bufsize 29)
    (set int64 1 socket_handle 0)
    (set int64 1 mod_net 0)
    (set int64 1 char 0)
    (set string 11 waiting "waiting...")
	(set string s netinitstr "error: can't init networking sockets!")
    (mod_net one :net_init !)
	(ret stpopi)
	(((ret zero !=) f =) f if)
		// ERROR can't allocate memory
		print_s (netinitstr)
        print_n
        exit (one)
	(endif)
    (ipaddr bufaddr :get_hostbyname !)
    (ret stpopi)
    // (:end jmp)
    ((ret zero !=) f =)
    (f :try_hostbyaddr jmpi)
    (:open_socket jmp)
    (:try_hostbyaddr)
    (ipaddr bufaddr :get_hostbyaddr !)
    (ret stpopi)
    ((ret zero !=) f =)
    (f :end jmpi)
    (:open_socket)
    print_i (portnum)
    print_n
    (bufaddr portnum :open_server_socket !)
    (ret stpopi)
    (socket_handle stpopi)
    print_s (bufaddr)
    print_n
    (:wait_conn)
    print_s (waitingaddr)
    print_n
    (socket_handle :open_accept_server !)
    (ret stpopi)
    (server_accept stpopi)
    print_i (portnum)
    print_n
    ((ret zero !=) f =)
    (server_accept :socket_read_byte !)
    print_i (portnum)
    print_n
    (ret stpopi)
    (char stpopi)
    (server_accept :close_accept_server !)
    (socket_handle :close_server_socket !)
    print_n
	(:socket_free_mem !)
    free_mod (mod_net)
    (:end)
    exit (zero)
(funcend)
#include <net-lib.l1h>
