// hello-reload.l1com
// Brackets - bytecode hot reload demo
// Only the new bytecode is loaded.
// The program starts from the beginning of the new code.
// Data is left unchanged! Must be the same memory addresses to work correctly!

#include <intr-func.l1h>
(main func)
	(set int64 1 zero 0)
	(set int64 1 one 1)
	(set int64 1 x 23)
	(set int64 1 y 42)
	(set int64 1 a 0)
	(set string 13 hello_str "Hello world!")
    (set string s bytecode_str "./hello-reload-2")
	(set int64 1 reload 0)
	(set int64 1 f 0)
	// print string
	(hello_str :print_s !)
	(:print_n !)
	(x * y a :=)
	(a :print_i !)
	(:print_n !)

	(((reload zero ==) f :=) f if)
	    (one reload :=)

        // do reload
        (bytecode_str :load_bytecode !)
	(endif)
	(zero :exit !)
(funcend)
