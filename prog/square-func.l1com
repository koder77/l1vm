// square-func.l1com
//
// calculate square of number
// show how to check the variable type on function call stack

#include <intr.l1h>
#include <vars.l1h>

(main func)
    #var ~ main
    (set int64 1 zero 0)
    (set int64 1 one~ 1)
    (set double 1 a~ 2.0)
    (set double 1 b~  13.5)
    (set double 1 c~ 7.8)
    (set double 1 as~ 0.0)
    (set double 1 bs~ 0.0)
    (set double 1 cs~ 0.0)
    (set int64 1 st_type~ 0)
    (set int64 1 f~ 0)

    // call square function with numbers a, b and c:
    (a~ :square !)
    (as~ stpopd)
    print_d (as~)
    print_n

    (b~ :square !)
    (bs~ stpopd)
    print_d (bs~)
    print_n

    (c~ :square !)
    (cs~ stpopd)
    print_d (cs~)
    print_n

    exit (zero)
(funcend)

(square func)
    #var ~ square

    // argument: double number
    // return value: double square of number
    (set double 1 num~ 0.0)
    (set double 1 sqr~ 0.0)
    (set int64 1 st_type~ 0)
    (set int64 1 f~ 0)
    (set string s st_errorstr~ "square: error: stack element not double!")

    // get type of stack variable
    stack_type (st_type~)
    (((st_type~ double_stack !=) f~ =) f~ if)
       // error: no double number on stack!
       print_s (st_errorstr~)
       print_n
       (return)
    (endif)

    (num~ stpopd)
    {sqr~ = num~ num~ *}
    (sqr~ stpushd)
(funcend)
