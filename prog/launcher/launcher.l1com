// launcher.l1com
//
// SDL demos launch tool
//
#include <intr.l1h>
(main func)
	(set const-int64 1 zero 0)
	(set const-int64 1 one 1)
	(set const-int64 1 two 2)
	(set const-int64 1 three 3)
	(set const-int64 1 four 4)
	(set const-int64 1 five 5)
	(set const-int64 1 quit 3)
	(set int64 1 width 220)
	(set int64 1 height 160)
	(set int64 1 width_b 219)
	(set int64 1 height_b 159)
	(set int64 1 bit 32)
    (set int64 1 gadgets 4)
	(set int64 1 fontsize 20)
	(set byte 1 back_r 143)
	(set byte 1 back_g 147)
	(set byte 1 back_b 151)
	(set byte 1 alpha 255)
	(set byte 1 black 0)
	(set const-int64 1 lines_x 5)
    (set const-int64 1 lines_y 5)
    (set const-int64 1 fractalix_x 5)
    (set const-int64 1 fractalix_y 40)
    (set const-int64 1 sdl_demo_x 5)
    (set const-int64 1 sdl_demo_y 75)
    (set const-int64 1 quit_x 5)
    (set const-int64 1 quit_y 125)
	(set string s fontnamestr "fonts/FreeMono.ttf")
    (set string s linesstr     "lines         ")
    (set string s fractalixstr "fractalix-3.2 ")
    (set string s sdl_demostr  "demo          ")
    (set string s quitstr      "quit          ")
    (set string s lines_runstr "l1vm lines")
    (set string s fractalix_runstr "l1vm fractalix-3.2")
    (set string s demo_runstr "l1vm sdl-lib-2")
    (set const-int64 1 status 1)
	(set int64 1 gadget_sel 0)
	(set string 256 gadget_retstr "")
	(set int64 1 ret 0)
	(set int64 1 value 0)
	(set int64 1 f 0)
	(reset-reg)
	// open screen
    (zero width height bit zero :sdl_open_screen !)
	(ret stpop)
	(one :string_init !)
	(two :process_init !)

	// load font
    (fontnamestr fontsize :sdl_font_ttf !)
	(gadgets :init_gui !)
	(zero zero width_b height_b back_r back_g back_b alpha :sdl_rectangle_fill !)
    (zero lines_x lines_y linesstr status :set_gadget_button !)
	(one fractalix_x fractalix_y fractalixstr status :set_gadget_button !)
	(two sdl_demo_x sdl_demo_y sdl_demostr status :set_gadget_button !)
	(three quit_x quit_y quitstr status :set_gadget_button !)
	(:loop)
	(:sdl_update !)
	(gadget_retstraddr :gadget_event !)
	(ret stpopi)
	(value stpopi)
	(gadget_sel stpopi)
	(loadreg)
	(((gadget_sel quit ==) f =) f if)
        (:sdl_quit !)
	    exit (zero)
	(endif)
	(((gadget_sel zero ==) f =) f if)
	     (lines_runstr :run_shell !)
	(endif)
	(((gadget_sel one ==) f =) f if)
	     (fractalix_runstr :run_shell !)
	(endif)
	(((gadget_sel two ==) f =) f if)
	     (demo_runstr :run_shell !)
	(endif)
	(:loop jmp)
(funcend)
#include <sdl-lib.l1h>
#include <string.l1h>
#include <process-lib.l1h>
