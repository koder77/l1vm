// 3x1-reader.l1com
// connect to l1vmgodata data base with 3x1 numbers in it
// show the calculated results
#include <intr.l1h>
#include <math-const.l1h>
#include <misc-macros.l1h>
#include <vars.l1h>
(main func)
	(set const-int64 1 zero 0)
	(set const-int64 1 one 1)
    (set const-int64 1 two 2)
    (set const-int64 1 three 3)
    (set int64 1 num 1)
    (set int64 1 res_step 0)
    (set int64 1 maxnum 1000)
    (set int64 1 result 0)
	(set const-int64 1 mod_string 0)
	(set const-int64 1 mod_net 1)
    (set const-int64 1 mod_math 2)
	(set int64 1 socket_handle 0)
    (set int64 1 work 1)
	(set string 256 ip "127.0.0.1")
    (set string 256 ip_2 "127.0.0.1")
    (set int64 1 port_one 2000)
    (set int64 1 port_two 2001)
    (set string 256 hoststr)
    (set int64 1 ip_len 10)
	(set int64 1 f 0)
	(set int64 1 ret 0)
    (set string 4097 key_str "num")
    (set string 4097 value_str "")
    (set string 4097 res_start_str "res")
    (set string s res_minus "-")
    (set int64 1 res_index 1)
    (set string 4098 res_num_str "")
    (set string 4097 num_str "")
    (set string 4097 res_step_str "")
    (set string 256 ret_str "")
    (set string 4098 request_str "")
    (set int64 1 string_len 4096)
	(set string 256 worker_id_str "")
//	(set string s worker_env_str "L1VMWORKERID")
	(set string 4097 ret_str "")
	(set string s netinitstr "error: can't init networking sockets!")
    (set string s addressstr "error can't get host address!")
    (set string s connectstr "error: can't connect to server!")
    (set string s storestr "error can't store data in data base!")
    (set string s dataokstr "data read OK!")
    (set string s ok_str "OK")
    (set string s error_str "ERROR")
    (set string s receiving_str "receiving ")
    (set string s calc_str "calculated number: ")
    (set string s colon_str " : ")
    (set string s one_str "1")
    (set string s empty_str "")
    (set string s prompt_str "number? (empty input to end) ")
    (set string s num_not_found_str "number not found!")
    (set int64 1 value 0)
    (mod_string :string_init !)
	(mod_net two :net_init !)
	(ret stpopi)
	(((ret zero !=) f =) f if)
		// ERROR can't allocate memory
        print_s (netinitstr)
        print_n
        exit (one)
	(endif)

    (mod_math :math_init !)

    // connect to l1vmgodata servers
    (ip_2 port_two ip port_one two :dcloud_init !)
    (ret stpop)
    (((ret zero !=) f =) f if)
        print_s (connectstr)
        print_n
        exit (one)
    (endif)

    (:loop)
    print_s (prompt_str)
    input_s (string_len, num_str)
    (num_str empty_str :string_compare !)
    (ret stpop)
    (((ret zero ==) f =) f if)
         (:end jmp)
    (endif)
    (one res_step =)

    // get values from servers
    (do)
        (res_step res_step_str string_len :string_int64tostring !)
        (request_str res_start_str :string_copy !)
        (request_str num_str :string_cat !)
        (request_str res_minus :string_cat !)
        (request_str res_step_str :string_cat !)

        // send key and get value from l1vmgodata server
        (request_str value_str :dcloud_get_key !)
        (ret stpop)
        (((ret zero !=) f =) f if)
		    // ERROR can't connect to server
            print_s (storestr)
            print_n

            // close data base connection
            (:dcloud_close !)

            exit (one)
	    (endif)

        // check if no value found ERROR return
        (value_str error_str :string_compare !)
        (ret stpop)
        (((ret zero !=) f =) f if+)
            (one res_index =)
            // convert value string to number
            (value_str :string_to_int !)
            (value stpop)

             print_i (value)
             print_n
        (else)
             print_s (num_not_found_str)
             print_n
             (:loop jmp)
        (endif)
        ((res_step one +) res_step =)
    (((value one !=) f =) f while)

    print_n
    (:loop jmp)

    (:end)
    (:dcloud_close !)

	exit (zero)
(funcend)

#include <net-lib.l1h>
#include <string.l1h>
#include <l1vmgodata.l1h>
#include <datacloud.l1h>
#include <math-lib.l1h>
