// GUI program launcher
//
//
(main func)
	(set int64 1 zero 0)
	(set int64 1 one 1)
	(set int64 1 two 2)
	(set int64 1 three 3)
	(set int64 1 four 4)
	(set int64 1 five 5)
	(set int64 1 six 6)
	(set int64 1 seven 7)
	(set int64 1 width 200)
	(set int64 1 height 240)
	(set int64 1 width_b 799)
	(set int64 1 height_b 599)
	(set int64 1 bit 32)
	(set int64 1 x_quit 20)
	(set int64 1 y_quit 20)
	(set int64 1 x_fract 20)
	(set int64 1 y_fract 80)
	(set int64 1 x_sdl_demo 20)
	(set int64 1 y_sdl_demo 120)
	(set int64 1 x_sdl_random 20)
	(set int64 1 y_sdl_random 160)
	(set int64 1 x_sdl_four 20)
	(set int64 1 y_sdl_four 200)
	(set int64 1 gadgets 5)
	(set int64 1 status 1)
	(set int64 1 delay 10000)
	(set string s gad_fract_str "fractalix ")
	(set string s gad_sdl_demo_str " SDL demo ")
	(set string s gad_random_str "SDL random")
	(set string s gad_sdl_four_str "   SDL 4  ")
	(set string s gad_quit_str "   Quit   ")
	(set string s fontname "fonts/FreeMono.ttf")
	// process strings
	(set string s run_fract_str "l1vm fractalix-3.2 &")
	(set string s run_sdl_demo_str "l1vm sdl-lib &")
	(set string s run_random_str "l1vm sdl-random-2 &")
	(set string s run_sdl_four_str "l1vm sdl-4 &")
	(set int64 1 fontsize 20)
	(set byte 1 back_r 143)
	(set byte 1 back_g 147)
	(set byte 1 back_b 151)
	(set byte 1 alpha 255)
	(set byte 1 black 0)
	(set int64 1 gadget_sel 0)
	(set string 256 gadget_retstr "")
	(set int64 1 ret 0)
	(set int64 1 value 0)
	(set int64 1 f 0)
	// open screen
    (zero width height bit zero :sdl_open_screen call)
	(ret stpopi)
	(loadreg)
	(one :string_init call)
	(loadreg)
	(two :process_init call)
	(loadreg)
	// load font
    (fontnameaddr fontsize :sdl_font_ttf call)
    (loadreg)
	(gadgets :init_gui call)
	(loadreg)
	(zero zero width_b height_b back_r back_g back_b alpha :sdl_rectangle_fill call)
	(loadreg)
	(zero x_quit y_quit gad_quit_straddr status :set_gadget_button call)
	(loadreg)
	(one x_fract y_fract gad_fract_straddr status :set_gadget_button call)
	(loadreg)
	(two x_sdl_demo y_sdl_demo gad_sdl_demo_straddr status :set_gadget_button call)
	(loadreg)
	(three x_sdl_random y_sdl_random gad_random_straddr status :set_gadget_button call)
	(loadreg)
	(four x_sdl_four y_sdl_four gad_sdl_four_straddr status :set_gadget_button call)
	(loadreg)
	(:loop)
	(:sdl_update call)
	(loadreg)
	(gadget_retstraddr :gadget_event call)
	(ret stpopi)
	(value stpopi)
	(gadget_sel stpopi)
	(loadreg)
	(4 gadget_sel 0 0 intr0)
	(((gadget_sel zero ==) f =) f if)
		(255 0 0 0 intr0)
	(endif)
	(((gadget_sel one ==) f =) f if)
		// launch L1VM fractalix
		// call system process
		(run_fract_straddr :run_shell call)
		(ret stpopi)
		(loadreg)
	(endif)
	(((gadget_sel two ==) f =) f if)
		// launch L1VM sdl demo
		// call system process
		(run_sdl_demo_straddr :run_shell call)
		(ret stpopi)
		(loadreg)
	(endif)
	(((gadget_sel three ==) f =) f if)
		// launch L1VM random
		// call system process
		(run_random_straddr :run_shell call)
		(ret stpopi)
		(loadreg)
	(endif)
	(((gadget_sel four ==) f =) f if)
		// launch L1VM sdl 4
		// call system process
		(run_sdl_four_straddr :run_shell call)
		(ret stpopi)
		(loadreg)
	(endif)
	(7 0 0 0 intr0)
	// (8 delay 0 0 intr0)
	(:loop jmp)
(funcend)
#include <sdl-lib.l1h>
#include <string.l1h>
#include <process-lib.l1h>
