// lines.l1com
// a draw lines program

(main func)
    (set int64 1 zero 0)
    (set int64 1 one 1)
    (set int64 1 two 2)
    (set int64 1 three 3)
    (set int64 1 width 640Q)
    (set int64 1 height 512Q)
    (set int64 1 bit 32)
    (set int64 1 ret 0)
	(set int64 1 posstep 50)
	(set int64 1 xpos 70)
	(set int64 1 ypos 6)
	(set int64 1 xmax 570)
	(set int64 1 ymax 506)
    (set int64 1 f 0)
    (set int64 1 delay 20000)
    // open screen
    (zero width height bit zero :sdl_open_screen !)
    (ret stpopi)
    (loadreg)
    // draw gfx
    (:draw_ptop !)
	// ! sdl update
    (:sdl_update !)
    (8 delay 0 0 intr0)
    (:sdl_quit jsr)
    // close sdl module
    (1 zero 0 0 intr0)
    // quit
    (255 0 0 0 intr0)
(funcend)

(draw_ptop func)
	(set int64 1 one 1)
	(set int64 1 f 0)
	(set int64 1 y 0)
	(set int64 1 x 0)
	(set byte 1 col 255)

	(ypos y =)
	(for-loop)
	(((y ymax <=) f =) f for)
		(xpos x =)
		(for-loop)
		(((x xmax <=) f =) f for)
			(x ypos xmax y col col col col :sdl_line !)
			((x posstep +) x =)
		(next)
		((y posstep +) y =)
	(next)
	(ymax y =)
	
	(for-loop)
	(((y ypos >=) f =) f for)
		(xmax x =)
		(for-loop)
		(((x xpos >=) f =) f for)
			(x ymax xpos y col col col col :sdl_line !)
			((x posstep -) x =)
		(next)
		((y posstep -) y =)
	(next)
	(ypos y =)
	(for-loop)
	(((y ymax <=) f =) f for)
		(xmax x =)
		(for-loop)
		(((x xpos >=) f =) f for)
			(x ypos xpos y col col col col :sdl_line !)
			((x posstep -) x =)
		(next)
		((y posstep +) y =)
	(next)
	(ymax y =)
	(for-loop)
	(((y ypos >=) f =) f for)
		(xpos x =)
		(for-loop)
		(((x xmax <=) f =) f for)
			(x ymax xmax y col col col col :sdl_line !)
			((x posstep +) x =)
		(next)
		((y posstep -) y =)
	(next)
(funcend)
#include <sdl-lib.l1h>
