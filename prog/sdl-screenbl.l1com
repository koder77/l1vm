// sdl-screenbl.l1com
// open full hd 1920x1080 full screen and draw colored rectangles
// press mouse button to exit!
//
(main func)
    (set int64 1 zero 0)
    (set int64 1 one 1)
    (set int64 1 two 2)
    (set int64 1 three 3)
    (set int64 1 width 1920Q)
    (set int64 1 height 1080Q)
    (set int64 1 rand_init 2018)
    (set int64 1 bit 32)
    (set int64 1 ret 0)
    (set int64 1 x1 350)
    (set int64 1 y1 300)
    (set int64 1 x2 0)
    (set int64 1 y2 0)
    (set byte 1 col 0)
    (set int64 1 maxcol 255)
    (set byte 1 maxcol_b 255)
    (set double 1 maxcol_d 255.0)
    (set int64 1 delay_rect 500)
    (set int64 1 f 0)
	// mouse state
	(set int64 1 x 0)
	(set int64 1 y 0)
	(set int64 1 mouse_button_left 0)
	(set int64 1 mouse_button_middle 0)
	(set int64 1 mouse_button_right 0)
    // colors
    (set byte 1 r 255)
    (set byte 1 g 255)
    (set byte 1 b 255)
    (set int64 1 f 0)
    // open screen
    (zero width height bit one :sdl_open_screen call)
    (ret stpopi)
    (loadreg)
    (one :math_init call)
    (loadreg)
    // draw gfx
    (rand_init :math_randinit call)
    (loadreg)
	(zero zero width height zero zero zero maxcol_b :sdl_rectangle_fill call)
    (loadreg)
	(:sdl_update call)
    (loadreg)
	// hide mouse pointer
	(zero :sdl_toggle_mouse_pointer call)
	(loadreg)
    (:loop)
    // first edge
    (width :math_randintmax call)
    (x1 stpopi)
    (loadreg)
    (height :math_randintmax call)
    (y1 stpopi)
    (loadreg)
    // second edge
    (width :math_randintmax call)
    (x2 stpopi)
    (loadreg)
    (height :math_randintmax call)
    (y2 stpopi)
    (loadreg)
// colors
    (maxcol :math_randintmax call)
    (r stpopi)
    (loadreg)
    (maxcol :math_randintmax call)
    (g stpopi)
    (loadreg)
    (maxcol :math_randintmax call)
    (b stpopi)
    (loadreg)
// draw colored box
    (x1 y1 x2 y2 r g b maxcol_b :sdl_rectangle_fill call)
    (loadreg)
    (:sdl_update call)
    (loadreg)
    (8 delay_rect 0 0 intr0)
	(reset-reg)
	(:sdl_get_mouse_state !)
	(x stpopi)
	(y stpopi)
	(mouse_button_left stpopi)
	(mouse_button_middle stpopi)
	(mouse_button_right stpopi)
	(loadreg)
	(((mouse_button_left zero ==) f =) f if)
		(255 0 0 0 intr0)
	(endif)
	(((mouse_button_middle zero ==) f =) f if)
		(255 0 0 0 intr0)
	(endif)
	(((mouse_button_right zero ==) f =) f if)
		(255 0 0 0 intr0)
	(endif)
    (:loop jmp)
(funcend)
#include <sdl-lib.l1h>
#include <math-lib.l1h>
