// GUI demo, SDL module
//
// count button clicks
//
#include <intr.l1h>
(main func)
	(set int64 1 zero 0)
	(set int64 1 one 1)
	(set int64 1 width 600)
	(set int64 1 height 140)
	(set int64 1 width_b 599)
	(set int64 1 height_b 139)
	(set int64 1 bit 32)
	(set int64 1 x 20)
	(set int64 1 y 20)
	(set int64 1 x_quit 20)
	(set int64 1 y_quit 80)
	(set int64 1 x_text 200)
	(set int64 1 y_text 25)
	(set int64 1 x_text2 599)
	(set int64 1 y_text2 80)
	(set int64 1 gadgets 2)
	(set int64 1 status 1)
	(set int64 1 delay 10000)
	(set string s gadgetstr " click me ")
	(set string s quitstr " quit ")
	(set int64 1 fontsize 20)
	(set byte 1 back_r 143)
	(set byte 1 back_g 147)
	(set byte 1 back_b 151)
	(set byte 1 alpha 255)
	(set byte 1 black 0)
	(set int64 1 gadget_sel 0)
	(set string 256 gadget_retstr "")
	(set int64 1 ret 0)
	(set int64 1 value 0)
	(set int64 1 f 0)
	(set string s clicked_str "clicked: ")
	(set string s clicked_times_str " times")
	(set int64 1 gadget_clicks 0)
	(set string 256 gadget_clicks_str "")
	(set int64 1 gadget_clicks_len 255)
	(set string 256 gadget_clicks_show_str "")
	(set string s fontname "fonts/free/FreeMono.ttf")
	(set int64 1 fontsize 20)
	(set byte 1 black 0)
	// open screen
    (zero width height bit zero :sdl_open_screen call)
	(ret stpopi)
	(loadreg)
	(one :string_init call)
	(loadreg)
	// load font
    (fontnameaddr fontsize :sdl_font_ttf call)
    (loadreg)
	(gadgets :init_gui call)
	(loadreg)
	(one :string_init call)
	(loadreg)
	(zero zero width_b height_b back_r back_g back_b alpha :sdl_rectangle_fill call)
	(loadreg)
	(zero x y gadgetstraddr status :set_gadget_button call)
	(one x_quit y_quit quitstraddr status :set_gadget_button call)
	(:loop)
	(:sdl_update call)
	(loadreg)
	(gadget_retstraddr :gadget_event call)
	(ret stpopi)
	(value stpopi)
	(gadget_sel stpopi)
	(loadreg)
	(4 gadget_sel 0 0 intr0)
	(((gadget_sel zero ==) f =) f if)
		// show how often the click button was clicked
		{gadget_clicks = (gadget_clicks + one)}
		(gadget_clicks gadget_clicks_str gadget_clicks_len :string_int64tostring !)
		(gadget_clicks_show_str clicked_str :string_copy !)
		(gadget_clicks_show_str gadget_clicks_str :string_cat !)
		(gadget_clicks_show_str clicked_times_str :string_cat !)
		(x_text y_text  x_text2 y_text2 back_r back_g back_b alpha :sdl_rectangle_fill call)
		(x_text y_text black black black gadget_clicks_show_str :sdl_text_ttf !)
	(endif)
	(((gadget_sel one ==) f =) f if)
		// exit app
		(:sdl_quit jsr)
		free_mod (zero)
	 	exit (zero)
	(endif)
	(:loop jmp)
(funcend)
#include <sdl-lib.l1h>
#include <string.l1h>
