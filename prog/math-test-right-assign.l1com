// math-test-right-assign.l1com - Brackets - new math expression test
//
//
#include <intr.l1h>
(main func)
    (set int64 1 zero 0)
    (set int64 1 xd 23)
    (set int64 1 yd 42)
    (set int64 1 zd 0)
    (set int64 1 zerod 0)
    (set int64 1 i 0)
    (set int64 1 f 0)
    (set string s messagestr "xd < yd and xd > 0")
    // new math expression:
    ((xd < yd) && (xd > zerod) i :=)
    (i :print_i !)
    (:print_n !)
    (i if)
        (messagestr :print_s !)
        (:print_n !)
    (endif)
    ((xd < yd) && (xd > zerod) f :=)
    (xd * yd zd :=)
    (zd :print_i !)
    (:print_n !)
    (zero :exit !)
(funcend)
