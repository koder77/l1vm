// mpfr math library
//
//
(main func)
    (set int64 1 zero 0)
	(set int64 1 xaddr 0)
	(set int64 1 yaddr 1)
	(set int64 1 resaddr 2)
	(set int64 1 outaddr 3)
	(set string s xstr "0.0")
	(set string s ystr "42.0")
	(set string s resstr "0.0")
	(set string s formatstr "%.20Ff")
	(set string 512 outstr "")
	(set int64 1 outstr_len 511)
	(set int64 1 one 1)
	(set int64 1 base 10)
	(set int64 1 precision 50)
	(set int64 1 f 0)
	(zero :mp_math_init call)
	(loadreg)
	// set variables
	(xstraddr base xaddr :mp_set_float call)
	(loadreg)
	// set pi
	(precision xaddr :mp_get_pi call)
	(loadreg)
	(ystraddr base yaddr :mp_set_float call)
	(loadreg)
	(resstraddr base resaddr :mp_set_float call)
	(loadreg)
	(xaddr yaddr resaddr :mp_mul_float call)
	(loadreg)
	(resaddr formatstraddr precision :mp_print_float call)
	(loadreg)
	(7 0 0 0 intr0)
	// save number to string
	(resaddr outstraddr outstr_len formatstr precision :mp_prints_float call)
	(loadreg)
	(6 outstr 0 0 intr0)
	(7 0 0 0 intr0)
	// read from string and print as nuber
	(outstraddr base outaddr :mp_set_float call)
	(loadreg)
	(outaddr formatstraddr precision :mp_print_float call)
	(loadreg)
	(7 0 0 0 intr0)
	// check mp_greater call 42.0 > 3.14
	(yaddr xaddr :mp_greater call)
	(f stpopi)
	(loadreg)
	(4 f 0 0 intr0)
	(7 0 0 0 intr0)
	(:mp_cleanup call)
	(loadreg)
	(1 zero 0 0 intr0)
	(255 zero 0 0 intr0)
(funcend)
// mpfr math library
//
//
(mp_math_init func)
    (set string s modulestr@gmp "libl1vmmpfr.so")
	(set string s cleanupstr@gmp "mp_cleanup")
	(set string s setstr@gmp "mp_set_float")
	(set string s addstr@gmp "mp_add_float")
	(set string s substr@gmp "mp_sub_float")
	(set string s mulstr@gmp "mp_mul_float")
	(set string s divstr@gmp "mp_div_float")
	(set string s printstr@gmp "mp_print_float")
	(set string s printsstr@gmp "mp_prints_float")
	(set string s lessstr@gmp "mp_less_float")
	(set string s less_equalstr@gmp "mp_less_equal_float")
	(set string s greaterstr@gmp "mp_greater_float")
	(set string s greater_equalstr@gmp "mp_greater_equal_float")
	(set string s equalstr@gmp "mp_equal_float")
	(set string s not_equalstr@gmp "mp_not_equal_float")
	(set string s get_pistr@gmp "mp_get_pi_float")
	(set string s get_log2str@gmp "mp_get_log2_float")
	(set string s get_eulerstr@gmp "mp_get_euler_float")
	(set string s get_catalanstr@gmp "mp_get_catalan_float")
	(set int64 1 cleanup@gmp 0)
	(set int64 1 set_float@gmp 1)
	(set int64 1 add_float@gmp 2)
	(set int64 1 sub_float@gmp 3)
	(set int64 1 mul_float@gmp 4)
	(set int64 1 div_float@gmp 5)
	(set int64 1 print_float@gmp 6)
	(set int64 1 prints_float@gmp 7)
	(set int64 1 less@gmp 8)
	(set int64 1 less_equal@gmp 9)
	(set int64 1 greater@gmp 10)
	(set int64 1 greater_equal@gmp 11)
	(set int64 1 equal@gmp 12)
	(set int64 1 not_equal@gmp 13)
	(set int64 1 get_pi@gmp 14)
	(set int64 1 get_log2@gmp 15)
	(set int64 1 get_euler@gmp 16)
	(set int64 1 get_catalan@gmp 17)
	(set int64 1 mod@gmp 0)
	// get argument from stack
    (mod@gmp stpopi)
    // load math module
    (0 modulestr@gmpaddr mod@gmp 0 intr0)
	// set functions
	(2 mod@gmp cleanup@gmp cleanupstr@gmpaddr intr0)
	(2 mod@gmp set_float@gmp setstr@gmpaddr intr0)
	(2 mod@gmp add_float@gmp addstr@gmpaddr intr0)
	(2 mod@gmp sub_float@gmp substr@gmpaddr intr0)
	(2 mod@gmp mul_float@gmp mulstr@gmpaddr intr0)
	(2 mod@gmp div_float@gmp divstr@gmpaddr intr0)
	(2 mod@gmp print_float@gmp printstr@gmpaddr intr0)
	(2 mod@gmp prints_float@gmp printsstr@gmpaddr intr0)
	(2 mod@gmp less@gmp lessstr@gmpaddr intr0)
	(2 mod@gmp less_equal@gmp less_equalstr@gmpaddr intr0)
	(2 mod@gmp greater@gmp greaterstr@gmpaddr intr0)
	(2 mod@gmp greater_equal@gmp greater_equalstr@gmpaddr intr0)
	(2 mod@gmp equal@gmp equalstr@gmpaddr intr0)
	(2 mod@gmp not_equal@gmp not_equalstr@gmpaddr intr0)
	(2 mod@gmp get_pi@gmp get_pistr@gmpaddr intr0)
	(2 mod@gmp get_log2@gmp get_log2str@gmpaddr intr0)
	(2 mod@gmp get_euler@gmp get_eulerstr@gmpaddr intr0)
	(2 mod@gmp get_catalan@gmp get_catalanstr@gmpaddr intr0)
    (set string s sqrstr@gmp "mp_sqr_float")
    (set int64 1 sqr@gmp 19)
    (set string s sqrtstr@gmp "mp_sqrt_float")
    (set int64 1 sqrt@gmp 20)
    (set string s cbrtstr@gmp "mp_cbrt_float")
    (set int64 1 cbrt@gmp 21)
    (set string s powstr@gmp "mp_pow_float")
    (set int64 1 pow@gmp 22)
    (set string s fabsstr@gmp "mp_fabs_float")
    (set int64 1 fabs@gmp 23)
    (set string s absstr@gmp "mp_abs_float")
    (set int64 1 abs@gmp 24)
    (set string s dimstr@gmp "mp_dim_float")
    (set int64 1 dim@gmp 25)
    (set string s logstr@gmp "mp_log_float")
    (set int64 1 log@gmp 26)
    (set string s log2str@gmp "mp_log2_float")
    (set int64 1 log2@gmp 27)
    (set string s logbstr@gmp "mp_logb_float")
    (set int64 1 logb@gmp 28)
    (set string s log10str@gmp "mp_log10_float")
    (set int64 1 log10@gmp 29)
    (set string s expstr@gmp "mp_exp_float")
    (set int64 1 exp@gmp 30)
    (set string s exp2str@gmp "mp_exp2_float")
    (set int64 1 exp2@gmp 31)
    (set string s exp10str@gmp "mp_exp10_float")
    (set int64 1 exp10@gmp 32)
    (set string s log1pstr@gmp "mp_log1p_float")
    (set int64 1 log1p@gmp 33)
    (set string s expm1str@gmp "mp_expm1_float")
    (set int64 1 expm1@gmp 34)
    (set string s nextpow2str@gmp "mp_nextpow2_float")
    (set int64 1 nextpow2@gmp 35)
    (set string s cosstr@gmp "mp_cos_float")
    (set int64 1 cos@gmp 36)
    (set string s sinstr@gmp "mp_sin_float")
    (set int64 1 sin@gmp 37)
    (set string s tanstr@gmp "mp_tan_float")
    (set int64 1 tan@gmp 38)
    (set string s secstr@gmp "mp_sec_float")
    (set int64 1 sec@gmp 39)
    (set string s cscstr@gmp "mp_csc_float")
    (set int64 1 csc@gmp 40)
    (set string s cotstr@gmp "mp_cot_float")
    (set int64 1 cot@gmp 41)
    (set string s acosstr@gmp "mp_acos_float")
    (set int64 1 acos@gmp 42)
    (set string s asinstr@gmp "mp_asin_float")
    (set int64 1 asin@gmp 43)
    (set string s atanstr@gmp "mp_atan_float")
    (set int64 1 atan@gmp 44)
    (set string s atan2str@gmp "mp_atan2_float")
    (set int64 1 atan2@gmp 45)
    (set string s acotstr@gmp "mp_acot_float")
    (set int64 1 acot@gmp 46)
    (set string s asecstr@gmp "mp_asec_float")
    (set int64 1 asec@gmp 47)
    (set string s acscstr@gmp "mp_acsc_float")
    (set int64 1 acsc@gmp 48)
    (set string s coshstr@gmp "mp_cosh_float")
    (set int64 1 cosh@gmp 49)
    (set string s sinhstr@gmp "mp_sinh_float")
    (set int64 1 sinh@gmp 50)
    (set string s tanhstr@gmp "mp_tanh_float")
    (set int64 1 tanh@gmp 51)
    (set string s sechstr@gmp "mp_sech_float")
    (set int64 1 sech@gmp 52)
    (set string s cschstr@gmp "mp_csch_float")
    (set int64 1 csch@gmp 53)
    (set string s cothstr@gmp "mp_coth_float")
    (set int64 1 coth@gmp 54)
    (set string s acoshstr@gmp "mp_acosh_float")
    (set int64 1 acosh@gmp 55)
    (set string s asinhstr@gmp "mp_asinh_float")
    (set int64 1 asinh@gmp 56)
    (set string s atanhstr@gmp "mp_atanh_float")
    (set int64 1 atanh@gmp 57)
    (set string s acothstr@gmp "mp_acoth_float")
    (set int64 1 acoth@gmp 58)
    (set string s asechstr@gmp "mp_asech_float")
    (set int64 1 asech@gmp 59)
    (set string s acschstr@gmp "mp_acsch_float")
    (set int64 1 acsch@gmp 60)
    (set string s hypotstr@gmp "mp_hypot_float")
    (set int64 1 hypot@gmp 61)
    (set string s eintstr@gmp "mp_eint_float")
    (set int64 1 eint@gmp 62)
    (set string s gammastr@gmp "mp_gamma_float")
    (set int64 1 gamma@gmp 63)
    (set string s tgammastr@gmp "mp_tgamma_float")
    (set int64 1 tgamma@gmp 64)
    (set string s lngammastr@gmp "mp_lngamma_float")
    (set int64 1 lngamma@gmp 65)
    (set string s zetastr@gmp "mp_zeta_float")
    (set int64 1 zeta@gmp 66)
    (set string s erfstr@gmp "mp_erf_float")
    (set int64 1 erf@gmp 67)
    (set string s erfcstr@gmp "mp_erfc_float")
    (set int64 1 erfc@gmp 68)
    (set string s besselj0str@gmp "mp_besselj0_float")
    (set int64 1 besselj0@gmp 69)
    (set string s besselj1str@gmp "mp_besselj1_float")
    (set int64 1 besselj1@gmp 70)
    (set string s bessely0str@gmp "mp_bessely0_float")
    (set int64 1 bessely0@gmp 71)
    (set string s bessely1str@gmp "mp_bessely1_float")
    (set int64 1 bessely1@gmp 72)
    (set string s fmastr@gmp "mp_fma_float")
    (set int64 1 fma@gmp 73)
    (set string s fmsstr@gmp "mp_fms_float")
    (set int64 1 fms@gmp 74)
    (set string s agmstr@gmp "mp_agm_float")
    (set int64 1 agm@gmp 75)
    (set string s li2str@gmp "mp_li2_float")
    (set int64 1 li2@gmp 76)
    (set string s fmodstr@gmp "mp_fmod_float")
    (set int64 1 fmod@gmp 77)
    (set string s rec_sqrtstr@gmp "mp_rec_sqrt_float")
    (set int64 1 rec_sqrt@gmp 78)
    (set string s digammastr@gmp "mp_digamma_float")
    (set int64 1 digamma@gmp 79)
    (set string s aistr@gmp "mp_ai_float")
    (set int64 1 ai@gmp 80)
    (set string s modfstr@gmp "mp_modf_float")
    (set int64 1 modf@gmp 81)
    (set string s rintstr@gmp "mp_rint_float")
    (set int64 1 rint@gmp 82)
    (set string s ceilstr@gmp "mp_ceil_float")
    (set int64 1 ceil@gmp 83)
    (set string s floorstr@gmp "mp_floor_float")
    (set int64 1 floor@gmp 84)
    (set string s roundstr@gmp "mp_round_float")
    (set int64 1 round@gmp 85)
    (set string s truncstr@gmp "mp_trunc_float")
    (set int64 1 trunc@gmp 86)
    (set string s rint_ceilstr@gmp "mp_rint_ceil_float")
    (set int64 1 rint_ceil@gmp 87)
    (set string s rint_floorstr@gmp "mp_rint_floor_float")
    (set int64 1 rint_floor@gmp 88)
    (set string s rint_roundstr@gmp "mp_rint_round_float")
    (set int64 1 rint_round@gmp 89)
    (set string s rint_truncstr@gmp "mp_rint_trunc_float")
    (set int64 1 rint_trunc@gmp 90)
    (set string s fracstr@gmp "mp_frac_float")
    (set int64 1 frac@gmp 91)
    (set string s remainderstr@gmp "mp_remainder_float")
    (set int64 1 remainder@gmp 92)
    (set string s nexttowardstr@gmp "mp_nexttoward_float")
    (set int64 1 nexttoward@gmp 93)
    (set string s nextabovestr@gmp "mp_nextabove_float")
    (set int64 1 nextabove@gmp 94)
    (set string s nextbelowstr@gmp "mp_nextbelow_float")
    (set int64 1 nextbelow@gmp 95)
    (set string s fmaxstr@gmp "mp_fmax_float")
    (set int64 1 fmax@gmp 96)
    (set string s fminstr@gmp "mp_fmin_float")
    (set int64 1 fmin@gmp 97)
    (2 mod@gmp sqr@gmp sqrstr@gmpaddr intr0)
    (2 mod@gmp sqrt@gmp sqrtstr@gmpaddr intr0)
    (2 mod@gmp cbrt@gmp cbrtstr@gmpaddr intr0)
    (2 mod@gmp pow@gmp powstr@gmpaddr intr0)
    (2 mod@gmp fabs@gmp fabsstr@gmpaddr intr0)
    (2 mod@gmp abs@gmp absstr@gmpaddr intr0)
    (2 mod@gmp dim@gmp dimstr@gmpaddr intr0)
    (2 mod@gmp log@gmp logstr@gmpaddr intr0)
    (2 mod@gmp log2@gmp log2str@gmpaddr intr0)
    (2 mod@gmp logb@gmp logbstr@gmpaddr intr0)
    (2 mod@gmp log10@gmp log10str@gmpaddr intr0)
    (2 mod@gmp exp@gmp expstr@gmpaddr intr0)
    (2 mod@gmp exp2@gmp exp2str@gmpaddr intr0)
    (2 mod@gmp exp10@gmp exp10str@gmpaddr intr0)
    (2 mod@gmp log1p@gmp log1pstr@gmpaddr intr0)
    (2 mod@gmp expm1@gmp expm1str@gmpaddr intr0)
    (2 mod@gmp nextpow2@gmp nextpow2str@gmpaddr intr0)
    (2 mod@gmp cos@gmp cosstr@gmpaddr intr0)
    (2 mod@gmp sin@gmp sinstr@gmpaddr intr0)
    (2 mod@gmp tan@gmp tanstr@gmpaddr intr0)
    (2 mod@gmp sec@gmp secstr@gmpaddr intr0)
    (2 mod@gmp csc@gmp cscstr@gmpaddr intr0)
    (2 mod@gmp cot@gmp cotstr@gmpaddr intr0)
    (2 mod@gmp acos@gmp acosstr@gmpaddr intr0)
    (2 mod@gmp asin@gmp asinstr@gmpaddr intr0)
    (2 mod@gmp atan@gmp atanstr@gmpaddr intr0)
    (2 mod@gmp atan2@gmp atan2str@gmpaddr intr0)
    (2 mod@gmp acot@gmp acotstr@gmpaddr intr0)
    (2 mod@gmp asec@gmp asecstr@gmpaddr intr0)
    (2 mod@gmp acsc@gmp acscstr@gmpaddr intr0)
    (2 mod@gmp cosh@gmp coshstr@gmpaddr intr0)
    (2 mod@gmp sinh@gmp sinhstr@gmpaddr intr0)
    (2 mod@gmp tanh@gmp tanhstr@gmpaddr intr0)
    (2 mod@gmp sech@gmp sechstr@gmpaddr intr0)
    (2 mod@gmp csch@gmp cschstr@gmpaddr intr0)
    (2 mod@gmp coth@gmp cothstr@gmpaddr intr0)
    (2 mod@gmp acosh@gmp acoshstr@gmpaddr intr0)
    (2 mod@gmp asinh@gmp asinhstr@gmpaddr intr0)
    (2 mod@gmp atanh@gmp atanhstr@gmpaddr intr0)
    (2 mod@gmp acoth@gmp acothstr@gmpaddr intr0)
    (2 mod@gmp asech@gmp asechstr@gmpaddr intr0)
    (2 mod@gmp acsch@gmp acschstr@gmpaddr intr0)
    (2 mod@gmp hypot@gmp hypotstr@gmpaddr intr0)
    (2 mod@gmp eint@gmp eintstr@gmpaddr intr0)
    (2 mod@gmp gamma@gmp gammastr@gmpaddr intr0)
    (2 mod@gmp tgamma@gmp tgammastr@gmpaddr intr0)
    (2 mod@gmp lngamma@gmp lngammastr@gmpaddr intr0)
    (2 mod@gmp zeta@gmp zetastr@gmpaddr intr0)
    (2 mod@gmp erf@gmp erfstr@gmpaddr intr0)
    (2 mod@gmp erfc@gmp erfcstr@gmpaddr intr0)
    (2 mod@gmp besselj0@gmp besselj0str@gmpaddr intr0)
    (2 mod@gmp besselj1@gmp besselj1str@gmpaddr intr0)
    (2 mod@gmp bessely0@gmp bessely0str@gmpaddr intr0)
    (2 mod@gmp bessely1@gmp bessely1str@gmpaddr intr0)
    (2 mod@gmp fma@gmp fmastr@gmpaddr intr0)
    (2 mod@gmp fms@gmp fmsstr@gmpaddr intr0)
    (2 mod@gmp agm@gmp agmstr@gmpaddr intr0)
    (2 mod@gmp li2@gmp li2str@gmpaddr intr0)
    (2 mod@gmp fmod@gmp fmodstr@gmpaddr intr0)
    (2 mod@gmp rec_sqrt@gmp rec_sqrtstr@gmpaddr intr0)
    (2 mod@gmp digamma@gmp digammastr@gmpaddr intr0)
    (2 mod@gmp ai@gmp aistr@gmpaddr intr0)
    (2 mod@gmp modf@gmp modfstr@gmpaddr intr0)
    (2 mod@gmp rint@gmp rintstr@gmpaddr intr0)
    (2 mod@gmp ceil@gmp ceilstr@gmpaddr intr0)
    (2 mod@gmp floor@gmp floorstr@gmpaddr intr0)
    (2 mod@gmp round@gmp roundstr@gmpaddr intr0)
    (2 mod@gmp trunc@gmp truncstr@gmpaddr intr0)
    (2 mod@gmp rint_ceil@gmp rint_ceilstr@gmpaddr intr0)
    (2 mod@gmp rint_floor@gmp rint_floorstr@gmpaddr intr0)
    (2 mod@gmp rint_round@gmp rint_roundstr@gmpaddr intr0)
    (2 mod@gmp rint_trunc@gmp rint_truncstr@gmpaddr intr0)
    (2 mod@gmp frac@gmp fracstr@gmpaddr intr0)
    (2 mod@gmp remainder@gmp remainderstr@gmpaddr intr0)
    (2 mod@gmp nexttoward@gmp nexttowardstr@gmpaddr intr0)
    (2 mod@gmp nextabove@gmp nextabovestr@gmpaddr intr0)
    (2 mod@gmp nextbelow@gmp nextbelowstr@gmpaddr intr0)
    (2 mod@gmp fmax@gmp fmaxstr@gmpaddr intr0)
    (2 mod@gmp fmin@gmp fminstr@gmpaddr intr0)
    (funcend)
    (mp_sqr_float func)
    (3 mod@gmp sqr@gmp 0 intr0)
    (funcend)
    (mp_sqrt_float func)
    (3 mod@gmp sqrt@gmp 0 intr0)
    (funcend)
    (mp_cbrt_float func)
    (3 mod@gmp cbrt@gmp 0 intr0)
    (funcend)
    (mp_pow_float func)
    (3 mod@gmp pow@gmp 0 intr0)
    (funcend)
    (mp_fabs_float func)
    (3 mod@gmp fabs@gmp 0 intr0)
    (funcend)
    (mp_abs_float func)
    (3 mod@gmp abs@gmp 0 intr0)
    (funcend)
    (mp_dim_float func)
    (3 mod@gmp dim@gmp 0 intr0)
    (funcend)
    (mp_log_float func)
    (3 mod@gmp log@gmp 0 intr0)
    (funcend)
    (mp_log2_float func)
    (3 mod@gmp log2@gmp 0 intr0)
    (funcend)
    (mp_logb_float func)
    (3 mod@gmp logb@gmp 0 intr0)
    (funcend)
    (mp_log10_float func)
    (3 mod@gmp log10@gmp 0 intr0)
    (funcend)
    (mp_exp_float func)
    (3 mod@gmp exp@gmp 0 intr0)
    (funcend)
    (mp_exp2_float func)
    (3 mod@gmp exp2@gmp 0 intr0)
    (funcend)
    (mp_exp10_float func)
    (3 mod@gmp exp10@gmp 0 intr0)
    (funcend)
    (mp_log1p_float func)
    (3 mod@gmp log1p@gmp 0 intr0)
    (funcend)
    (mp_expm1_float func)
    (3 mod@gmp expm1@gmp 0 intr0)
    (funcend)
    (mp_nextpow2_float func)
    (3 mod@gmp nextpow2@gmp 0 intr0)
    (funcend)
    (mp_cos_float func)
    (3 mod@gmp cos@gmp 0 intr0)
    (funcend)
    (mp_sin_float func)
    (3 mod@gmp sin@gmp 0 intr0)
    (funcend)
    (mp_tan_float func)
    (3 mod@gmp tan@gmp 0 intr0)
    (funcend)
    (mp_sec_float func)
    (3 mod@gmp sec@gmp 0 intr0)
    (funcend)
    (mp_csc_float func)
    (3 mod@gmp csc@gmp 0 intr0)
    (funcend)
    (mp_cot_float func)
    (3 mod@gmp cot@gmp 0 intr0)
    (funcend)
    (mp_acos_float func)
    (3 mod@gmp acos@gmp 0 intr0)
    (funcend)
    (mp_asin_float func)
    (3 mod@gmp asin@gmp 0 intr0)
    (funcend)
    (mp_atan_float func)
    (3 mod@gmp atan@gmp 0 intr0)
    (funcend)
    (mp_atan2_float func)
    (3 mod@gmp atan2@gmp 0 intr0)
    (funcend)
    (mp_acot_float func)
    (3 mod@gmp acot@gmp 0 intr0)
    (funcend)
    (mp_asec_float func)
    (3 mod@gmp asec@gmp 0 intr0)
    (funcend)
    (mp_acsc_float func)
    (3 mod@gmp acsc@gmp 0 intr0)
    (funcend)
    (mp_cosh_float func)
    (3 mod@gmp cosh@gmp 0 intr0)
    (funcend)
    (mp_sinh_float func)
    (3 mod@gmp sinh@gmp 0 intr0)
    (funcend)
    (mp_tanh_float func)
    (3 mod@gmp tanh@gmp 0 intr0)
    (funcend)
    (mp_sech_float func)
    (3 mod@gmp sech@gmp 0 intr0)
    (funcend)
    (mp_csch_float func)
    (3 mod@gmp csch@gmp 0 intr0)
    (funcend)
    (mp_coth_float func)
    (3 mod@gmp coth@gmp 0 intr0)
    (funcend)
    (mp_acosh_float func)
    (3 mod@gmp acosh@gmp 0 intr0)
    (funcend)
    (mp_asinh_float func)
    (3 mod@gmp asinh@gmp 0 intr0)
    (funcend)
    (mp_atanh_float func)
    (3 mod@gmp atanh@gmp 0 intr0)
    (funcend)
    (mp_acoth_float func)
    (3 mod@gmp acoth@gmp 0 intr0)
    (funcend)
    (mp_asech_float func)
    (3 mod@gmp asech@gmp 0 intr0)
    (funcend)
    (mp_acsch_float func)
    (3 mod@gmp acsch@gmp 0 intr0)
    (funcend)
    (mp_hypot_float func)
    (3 mod@gmp hypot@gmp 0 intr0)
    (funcend)
    (mp_eint_float func)
    (3 mod@gmp eint@gmp 0 intr0)
    (funcend)
    (mp_gamma_float func)
    (3 mod@gmp gamma@gmp 0 intr0)
    (funcend)
    (mp_tgamma_float func)
    (3 mod@gmp tgamma@gmp 0 intr0)
    (funcend)
    (mp_lngamma_float func)
    (3 mod@gmp lngamma@gmp 0 intr0)
    (funcend)
    (mp_zeta_float func)
    (3 mod@gmp zeta@gmp 0 intr0)
    (funcend)
    (mp_erf_float func)
    (3 mod@gmp erf@gmp 0 intr0)
    (funcend)
    (mp_erfc_float func)
    (3 mod@gmp erfc@gmp 0 intr0)
    (funcend)
    (mp_besselj0_float func)
    (3 mod@gmp besselj0@gmp 0 intr0)
    (funcend)
    (mp_besselj1_float func)
    (3 mod@gmp besselj1@gmp 0 intr0)
    (funcend)
    (mp_bessely0_float func)
    (3 mod@gmp bessely0@gmp 0 intr0)
    (funcend)
    (mp_bessely1_float func)
    (3 mod@gmp bessely1@gmp 0 intr0)
    (funcend)
    (mp_fma_float func)
    (3 mod@gmp fma@gmp 0 intr0)
    (funcend)
    (mp_fms_float func)
    (3 mod@gmp fms@gmp 0 intr0)
    (funcend)
    (mp_agm_float func)
    (3 mod@gmp agm@gmp 0 intr0)
    (funcend)
    (mp_li2_float func)
    (3 mod@gmp li2@gmp 0 intr0)
    (funcend)
    (mp_fmod_float func)
    (3 mod@gmp fmod@gmp 0 intr0)
    (funcend)
    (mp_rec_sqrt_float func)
    (3 mod@gmp rec_sqrt@gmp 0 intr0)
    (funcend)
    (mp_digamma_float func)
    (3 mod@gmp digamma@gmp 0 intr0)
    (funcend)
    (mp_ai_float func)
    (3 mod@gmp ai@gmp 0 intr0)
    (funcend)
    (mp_modf_float func)
    (3 mod@gmp modf@gmp 0 intr0)
    (funcend)
    (mp_rint_float func)
    (3 mod@gmp rint@gmp 0 intr0)
    (funcend)
    (mp_ceil_float func)
    (3 mod@gmp ceil@gmp 0 intr0)
    (funcend)
    (mp_floor_float func)
    (3 mod@gmp floor@gmp 0 intr0)
    (funcend)
    (mp_round_float func)
    (3 mod@gmp round@gmp 0 intr0)
    (funcend)
    (mp_trunc_float func)
    (3 mod@gmp trunc@gmp 0 intr0)
    (funcend)
    (mp_rint_ceil_float func)
    (3 mod@gmp rint_ceil@gmp 0 intr0)
    (funcend)
    (mp_rint_floor_float func)
    (3 mod@gmp rint_floor@gmp 0 intr0)
    (funcend)
    (mp_rint_round_float func)
    (3 mod@gmp rint_round@gmp 0 intr0)
    (funcend)
    (mp_rint_trunc_float func)
    (3 mod@gmp rint_trunc@gmp 0 intr0)
    (funcend)
    (mp_frac_float func)
    (3 mod@gmp frac@gmp 0 intr0)
    (funcend)
    (mp_remainder_float func)
    (3 mod@gmp remainder@gmp 0 intr0)
    (funcend)
    (mp_nexttoward_float func)
    (3 mod@gmp nexttoward@gmp 0 intr0)
    (funcend)
    (mp_nextabove_float func)
    (3 mod@gmp nextabove@gmp 0 intr0)
    (funcend)
    (mp_nextbelow_float func)
    (3 mod@gmp nextbelow@gmp 0 intr0)
    (funcend)
    (mp_fmax_float func)
    (3 mod@gmp fmax@gmp 0 intr0)
    (funcend)
    (mp_fmin_float func)
    (3 mod@gmp fmin@gmp 0 intr0)
    (funcend)
    // paste to generated code end: ==============================================
    // wrapper functions
    (mp_cleanup func)
        (3 mod@gmp cleanup@gmp 0 intr0)
    (funcend)
    (mp_set_float func)
        (3 mod@gmp set_float@gmp 0 intr0)
    (funcend)
    (mp_add_float func)
        (3 mod@gmp add_float@gmp 0 intr0)
    (funcend)
    (mp_sub_float func)
        (3 mod@gmp sub_float@gmp 0 intr0)
    (funcend)
    (mp_mul_float func)
        (3 mod@gmp mul_float@gmp 0 intr0)
    (funcend)
    (mp_div_float func)
        (3 mod@gmp div_float@gmp 0 intr0)
    (funcend)
    (mp_print_float func)
        (3 mod@gmp print_float@gmp 0 intr0)
    (funcend)
    (mp_prints_float func)
        (3 mod@gmp prints_float@gmp 0 intr0)
    (funcend)
    (mp_less func)
        (3 mod@gmp less@gmp 0 intr0)
    (funcend)
    (mp_less_equal func)
        (3 mod@gmp less_equal@gmp 0 intr0)
    (funcend)
    (mp_greater func)
        (3 mod@gmp greater@gmp 0 intr0)
    (funcend)
    (mp_greater_equal func)
        (3 mod@gmp greater_equal@gmp 0 intr0)
    (funcend)
    (mp_equal func)
        (3 mod@gmp equal@gmp 0 intr0)
    (funcend)
    (mp_not_equal func)
        (3 mod@gmp not_equal@gmp 0 intr0)
    (funcend)
    (mp_get_pi func)
        (3 mod@gmp get_pi@gmp 0 intr0)
    (funcend)
    (mp_get_log2 func)
        (3 mod@gmp get_log2@gmp 0 intr0)
    (funcend)
    (mp_get_euler func)
        (3 mod@gmp get_euler@gmp 0 intr0)
    (funcend)
    (mp_get_catalan func)
        (3 mod@gmp get_catalan@gmp 0 intr0)
    (funcend)
