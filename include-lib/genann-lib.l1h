// genann library
// neural networks
//
(genann_init_lib func)
    (set string s modulestr@genann "libl1vmgenann")
    (set string s readstr@genann "genann_read_ann")
    (set string s writestr@genann "genann_write_ann")
    (set string s initstr@genann "genann_init_ann")
    (set string s trainstr@genann "genann_train_ann")
    (set string s runstr@genann "genann_run_ann")
    (set string s freestr@genann "genann_free_ann")
	(set string s freegenannsstr@genann "free_mem")
	(set string s genanninitstr@genann "genann_init_state")
	(set string s alloc_err_str@genann "genann: ERROR allocating memory for genanns!")
    (set int64 1 read@genann 0)
    (set int64 1 write@genann 1)
    (set int64 1 init@genann 2)
    (set int64 1 train@genann 3)
    (set int64 1 run@genann 4)
    (set int64 1 free@genann 5)
	(set int64 1 freegenanns@genann 6)
	(set int64 1 genanninit@genann 7)
    (set int64 1 mod@genann 0)
	(set int64 1 maxind@genann 0)
	(set int64 1 ret@genann 0)
	(set int64 1 f@genann 0)
    // get arguments from stack
	(maxind@genann stpopi)
    (mod@genann stpopi)
    // load genann module
    (0 modulestr@genannaddr mod@genann 0 intr0)
    // set functions
    (2 mod@genann read@genann readstr@genannaddr intr0)
    (2 mod@genann write@genann writestr@genannaddr intr0)
    (2 mod@genann init@genann initstr@genannaddr intr0)
    (2 mod@genann train@genann trainstr@genannaddr intr0)
    (2 mod@genann run@genann runstr@genannaddr intr0)
    (2 mod@genann free@genann freestr@genannaddr intr0)
	(2 mod@genann freegenanns@genann freegenannsstr@genannaddr intr0)
	(2 mod@genann genanninit@genann genanninitstr@genannaddr intr0)
	// call init genann function
	(maxind@genann stpushi)
	(3 mod@genann genanninit@genann 0 intr0)
	(ret@genann stpopi)
	(loadreg)
	(((ret@genann zero !=) f@genann =) f@genann if)
		(6 alloc_err_str@genann 0 0 intr0)
		(7 0 0 0 intr0)
	(endif)
	(ret@genann stpushi)
(funcend)
// wrapper functions
(genann_read func)
    (3 mod@genann read@genann 0 intr0)
(funcend)
(genann_write func)
    (3 mod@genann write@genann 0 intr0)
(funcend)
(genann_init func)
    (3 mod@genann init@genann 0 intr0)
(funcend)
(genann_train func)
    (3 mod@genann train@genann 0 intr0)
(funcend)
(genann_run func)
    (3 mod@genann run@genann 0 intr0)
(funcend)
(genann_free func)
    (3 mod@genann free@genann 0 intr0)
(funcend)
(free_genanns func)
	(3 mod@genann freegenanns@genann 0 intr0)
(funcend)
