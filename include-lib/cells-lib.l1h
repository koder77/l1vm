// Cells library
// neural networks using Cells FANN library
//
(cells_init_lib func)
	(set string s modulestr@cells "libl1vmcells")
	(set string s alloc_neurons_equalstr@cells "cells_alloc_neurons_equal")
	(set string s alloc_neuronsstr@cells "cells_alloc_neurons")
	(set string s dealloc_neuronsstr@cells "cells_dealloc_neurons")
	(set string s fann_do_update_annstr@cells "cells_fann_do_update_ann")
	(set string s fann_read_annstr@cells "cells_fann_read_ann")
	(set string s fann_run_annstr@cells "cells_fann_run_ann")
	(set string s fann_get_ouputstr@cells "cells_fann_get_output")
	(set string s alloc_node_linksstr@cells "cells_alloc_node_links")
	(set string s set_node_linkstr@cells "cells_set_node_link")
	(set string s fann_get_max_layerstr@cells "cells_fann_get_max_layer")
	(set string s fann_get_max_nodesstr@cells "cells_fann_get_max_nodes")
	(set string s fann_run_ann_go_linksstr@cells "cells_fann_run_ann_go_links")
	(set string s cells_allocstr@cells "cells_alloc")
	(set string s cells_deallocstr@cells "cells_dealloc")
	(set string s cells_fann_save_cellsstr@cells "cells_fann_save_cells")
	(set string s cells_fann_load_cellsstr@cells "cells_fann_load_cells")
    (set string s dealloc_node_linksstr@cells "cells_dealloc_node_links")
	(set int64 1 alloc_neurons_equal@cells 0)
	(set int64 1 alloc_neurons@cells 1)
	(set int64 1 dealloc_neurons@cells 2)
	(set int64 1 fann_do_update_ann@cells 3)
	(set int64 1 fann_read_ann@cells 4)
	(set int64 1 fann_run_ann@cells 5)
	(set int64 1 fann_get_output@cells 6)
	(set int64 1 alloc_node_links@cells 7)
	(set int64 1 set_node_link@cells 8)
	(set int64 1 fann_get_max_layer@cells 9)
	(set int64 1 fann_get_max_nodes@cells 10)
	(set int64 1 fann_run_ann_go_links@cells 11)
	(set int64 1 cells_alloc@cells 12)
	(set int64 1 cells_dealloc@cells 13)
	(set int64 1 cells_fann_save_cells@cells 14)
	(set int64 1 cells_fann_load_cells@cells 15)
	(set int64 1 dealloc_node_links@cells 16)
	(set int64 1 mod@cells 0)
	(set int64 1 ret@cells 0)
	(set int64 1 cells_num@cells)
	(set int64 1 f@cells 0)
	(set string s alloc_err_str@cells "Cells: ERROR allocating memory for Cells!")
	// get arguments from stack
	(cells_num@cells stpopi)
    (mod@cells stpopi)
    // load fann module
    (0 modulestr@cellsaddr mod@cells 0 intr0)
	// set functions
	(2 mod@cells alloc_neurons_equal@cells alloc_neurons_equalstr@cells intr0)
	(2 mod@cells alloc_neurons@cells alloc_neuronsstr@cells intr0)
	(2 mod@cells dealloc_neurons@cells dealloc_neuronsstr@cells intr0)
	(2 mod@cells fann_do_update_ann@cells fann_do_update_annstr@cells intr0)
	(2 mod@cells fann_read_ann@cells fann_read_annstr@cells intr0)
	(2 mod@cells fann_run_ann@cells fann_run_annstr@cells intr0)
	(2 mod@cells fann_get_output@cells fann_get_ouputstr@cells intr0)
	(2 mod@cells alloc_node_links@cells alloc_node_linksstr@cells intr0)
	(2 mod@cells set_node_link@cells set_node_linkstr@cells intr0)
	(2 mod@cells fann_get_max_layer@cells fann_get_max_layerstr@cells intr0)
	(2 mod@cells fann_get_max_nodes@cells fann_get_max_nodesstr@cells intr0)
	(2 mod@cells fann_run_ann_go_links@cells fann_run_ann_go_linksstr@cells intr0)
	(2 mod@cells cells_alloc@cells cells_allocstr@cells intr0)
	(2 mod@cells cells_dealloc@cells cells_deallocstr@cells intr0)
	(2 mod@cells cells_fann_save_cells@cells cells_fann_save_cellsstr@cells intr0)
	(2 mod@cells cells_fann_load_cells@cells cells_fann_load_cellsstr@cells intr0)
	(2 mod@cells dealloc_node_links@cells dealloc_node_linksstr@cells intr0)
	// call init cells alloc function
	(cells_num@cells stpushi)
	(3 mod@cells cells_alloc@cells 0 intr0)
	(ret@cells stpopi)
	(loadreg)
	(((ret@cells zero !=) f@cells =) f@cells if)
		(6 alloc_err_str@cells 0 0 intr0)
		(7 0 0 0 intr0)
	(endif)
	(ret stpushi)
(funcend)
// wrapper functions
(cells_alloc_neurons_equal func)
	(3 mod@cells alloc_neurons_equal@cells 0 intr0)
(funcend)
(cells_alloc_neurons func)
	(3 mod@cells alloc_neurons@cells 0 intr0)
(funcend)
(cells_dealloc_neurons func)
	(3 mod@cells dealloc_neurons@cells 0 intr0)
(funcend)
(cells_fann_do_update_ann func)
	(3 mod@cells fann_do_update_ann@cells 0 intr0)
(funcend)
(cells_fann_read_ann func)
	(3 mod@cells fann_read_ann@cells 0 intr0)
(funcend)
(cells_fann_run_ann func)
	(3 mod@cells fann_run_ann@cells 0 intr0)
(funcend)
(cells_fann_get_output func)
	(3 mod@cells fann_get_output@cells 0 intr0)
(funcend)
(cells_alloc_node_links func)
	(3 mod@cells alloc_node_links@cells 0 intr0)
(funcend)
(cells_dealloc_node_links func)
	(3 mod@cells dealloc_node_links@cells 0 intr0)
(funcend)
(cells_set_node_link func)
	(3 mod@cells set_node_link@cells 0 intr0)
(funcend)
(cells_fann_get_max_layer func)
	(3 mod@cells fann_get_max_layer@cells 0 intr0)
(funcend)
(cells_fann_get_max_nodes func)
	(3 mod@cells fann_get_max_nodes@cells 0 intr0)
(funcend)
(cells_fann_run_ann_go_links func)
	(3 mod@cells fann_run_ann_go_links@cells 0 intr0)
(funcend)
(cells_dealloc func)
	(3 mod@cells cells_dealloc@cells 0 intr0)
(funcend)
(cells_fann_save_cells func)
	(3 mod@cells cells_fann_save_cells@cells 0 intr0)
(funcend)
(cells_fann_load_cells func)
	(3 mod@cells cells_fann_load_cells@cells 0 intr0)
(funcend)
