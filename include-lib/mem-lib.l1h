// mem library
//
//
(mem_init func)
	// normal array functions
	(set string s modulestr@mem "libl1vmmem")
	(set string s initstr@mem "init_mem")
	(set string s allocbytestr@mem "alloc_byte")
	(set string s allocint16str@mem "alloc_int16")
	(set string s allocint32str@mem "alloc_int32")
	(set string s allocint64str@mem "alloc_int64")
	(set string s allocdoublestr@mem "alloc_double")
	(set string s deallocstr@mem "dealloc_mem")
	(set string s int_to_arraystr@mem "int_to_array")
	(set string s array_to_instr@mod "array_to_int")
	(set string s double_to_arraystr@mem "double_to_array")
	(set string s array_to_doublestr@mem "array_to_double")
	(set string s free@memstr "free_mem")
	// vector array functions
	(set string s allocbytevectstr@mem "alloc_byte_vect")
	(set string s allocint16vectstr@mem "alloc_int16_vect")
	(set string s allocint32vectstr@mem "alloc_int32_vect")
	(set string s allocint64vectstr@mem "alloc_int64_vect")
	(set string s allocdoublevectstr@mem "alloc_double_vect")
	(set string s deallocvectstr@mem "dealloc_mem_vect")
	(set string s int_to_vectstr@mem "int_to_vect")
	(set string s double_to_vectstr@mem "double_to_vect")
	(set string s vect_to_intstr@mem "vect_to_int")
	(set string s vect_to_doublestr@mem "vect_to_double")
	(set string s vect_erasestr@mem "vect_erase")
	(set string s insert_int_to_vectstr@mem "insert_int_to_vect")
	(set string s insert_double_to_vectstr@mem "insert_double_to_vect")
	(set string s get_vect_sizestr@mem "get_vect_size")
	(set int64 1 init@mem 0)
	(set int64 1 allocbyte@mem 1)
	(set int64 1 allocint16@mem 2)
	(set int64 1 allocint32@mem 3)
	(set int64 1 allocint64@mem 4)
	(set int64 1 allocdouble@mem 5)
	(set int64 1 dealloc@mem 6)
	(set int64 1 int_to_array@mem 7)
	(set int64 1 array_to_int@mem 8)
	(set int64 1 double_to_array@mem 9)
	(set int64 1 array_to_double@mem 10)
	(set int64 1 free@mem 11)
	// vector functions
	(set int64 1 allocbytevect@mem 12)
	(set int64 1 allocint16vect@mem 13)
	(set int64 1 allocint32vect@mem 14)
	(set int64 1 allocint64vect@mem 15)
	(set int64 1 allocdoublevect@mem 16)
	(set int64 1 deallocvect@mem 17)
	(set int64 1 int_to_vect@mem 18)
	(set int64 1 double_to_vect@mem 19)
	(set int64 1 vect_to_int@mem 20)
	(set int64 1 vect_to_double@mem 21)
	(set int64 1 vect_erase@mem 22)
	(set int64 1 insert_int_to_vect@mem 23)
	(set int64 1 insert_double_to_vect@mem 24)
	(set int64 1 get_vect_size@mem 25)
	(set int64 1 mod@mem 0)
	(set int64 1 maxind@mem 0)
	// get arguments from stack
	(maxind@mem stpopi)
	(mod@mem stpopi)
	// load mem module
	(0 modulestr@memaddr mod@mem 0 intr0)
	// set functions
	(2 mod@mem init@mem initstr@memaddr intr0)
	(2 mod@mem allocbyte@mem allocbytestr@memaddr intr0)
	(2 mod@mem allocint16@mem allocint16str@mem intr0)
	(2 mod@mem allocint32@mem allocint32str@memaddr intr0)
	(2 mod@mem allocint64@mem allocint64str@memaddr intr0)
	(2 mod@mem allocdouble@mem allocdoublestr@memaddr intr0)
	(2 mod@mem dealloc@mem deallocstr@memaddr intr0)
	(2 mod@mem int_to_array@mem int_to_arraystr@memaddr intr0)
	(2 mod@mem array_to_int@mem array_to_instr@modaddr intr0)
	(2 mod@mem double_to_array@mem double_to_arraystr@memaddr intr0)
	(2 mod@mem array_to_double@mem array_to_doublestr@memaddr intr0)
	(2 mod@mem free@mem free@memstraddr intr0)
	// vector functions
	(2 mod@mem allocbytevect@mem allocbytevectstr@memaddr intr0)
	(2 mod@mem allocint16vect@mem allocint16vectstr@memaddr intr0)
	(2 mod@mem allocint32vect@mem allocint32vectstr@memaddr intr0)
	(2 mod@mem allocint64vect@mem allocint64vectstr@memaddr intr0)
	(2 mod@mem allocdoublevect@mem allocdoublevectstr@memaddr intr0)
	(2 mod@mem deallocvect@mem deallocvectstr@memaddr intr0)
	(2 mod@mem int_to_vect@mem int_to_vectstr@memaddr intr0)
	(2 mod@mem double_to_vect@mem double_to_vectstr@memaddr intr0)
	(2 mod@mem vect_to_int@mem vect_to_intstr@memaddr intr0)
	(2 mod@mem vect_to_double@mem vect_to_doublestr@memaddr intr0)
	(2 mod@mem vect_erase@mem vect_erasestr@memaddr intr0)
	(2 mod@mem insert_int_to_vect@mem insert_int_to_vectstr@memaddr intr0)
	(2 mod@mem insert_double_to_vect@mem insert_double_to_vectstr@memaddr intr0)
	(2 mod@mem get_vect_size@mem get_vect_sizestr@memaddr intr0)
	// init module
	(maxind@mem stpushi)
	(3 mod@mem init@mem 0 intr0)
	// return value back to caller
(funcend)
// wrapper functions
(alloc_byte func)
	(3 mod@mem allocbyte@mem 0 intr0)
(funcend)
(alloc_int16 func)
	(3 mod@mem allocint16@mem 0 intr0)
(funcend)
(alloc_int32 func)
	(3 mod@mem allocint32@mem 0 intr0)
(funcend)
(alloc_int64 func)
	(3 mod@mem allocint64@mem 0 intr0)
(funcend)
(alloc_double func)
	(3 mod@mem allocdouble@mem 0 intr0)
(funcend)
(dealloc func)
	(3 mod@mem dealloc@mem 0 intr0)
(funcend)
(int_to_array func)
	(3 mod@mem int_to_array@mem 0 intr0)
(funcend)
(array_to_int func)
	(3 mod@mem array_to_int@mem 0 intr0)
(funcend)
(double_to_array func)
	(3 mod@mem double_to_array@mem 0 intr0)
(funcend)
(array_to_double func)
	(3 mod@mem array_to_double@mem 0 intr0)
(funcend)
(free_mem func)
	(3 mod@mem free@mem 0 intr0)
(funcend)
//
//
// vector functions
//
//
(alloc_byte_vect func)
	(3 mod@mem allocbytevect@mem 0 intr0)
(funcend)
(alloc_int16_vect func)
	(3 mod@mem allocint16vect@mem 0 intr0)
(funcend)
(alloc_int32_vect func)
	(3 mod@mem allocint32vect@mem 0 intr0)
(funcend)
(alloc_int64_vect func)
	(3 mod@mem allocint64vect@mem 0 intr0)
(funcend)
(alloc_double_vect func)
	(3 mod@mem allocdoublevect@mem 0 intr0)
(funcend)
(dealloc_vect func)
	(3 mod@mem deallocvect@mem 0 intr0)
(funcend)
(int_to_vect func)
	(3 mod@mem int_to_vect@mem 0 intr0)
(funcend)
(double_to_vect func)
	(3 mod@mem double_to_vect@mem 0 intr0)
(funcend)
(vect_to_int func)
	(3 mod@mem vect_to_int@mem 0 intr0)
(funcend)
(vect_to_double func)
	(3 mod@mem vect_to_double@mem 0 intr0)
(funcend)
(vect_erase func)
	(3 mod@mem vect_erase@mem 0 intr0)
(funcend)
(insert_int_to_vect func)
	(3 mod@mem insert_int_to_vect@mem 0 intr0)
(funcend)
(insert_double_to_vect func)
	(3 mod@mem insert_double_to_vect@mem 0 intr0)
(funcend)
(get_vect_size func)
	(3 mod@mem get_vect_size@mem 0 intr0)
(funcend)
