>> intr-func.l1h
>> interrupt macros - new only functions - no macros
>> intr0
>> @# chars to print \n newline char
>> new: types can be set by setting the variable types as the first char:
>> i = integer / string pointer
>> d = double
>> s = string
>> iFOO -> set iFOO as an integer variable
>>
#func load_mod (iNAME, iNUM) :(0 iNAME iNUM 0 intr0)
#func free_mod (iNUM) :(1 iNUM 0 0 intr0)
#func set_mod (iNUM, iFUNCNUM, iFUNCNAME) :(2 iNUM iFUNCNUM iFUNCNAME intr0)
#func call_mod (iNUM, iFUNCNUM) :(3 iNUM iFUNCNUM 0 intr0)
>> print
#func print_i (iX) :(4 iX 0 0 intr0)
#func print_d (dX) :(5 dX 0 0 intr0)
#func print_s (sX) :(6 sX 0 0 intr0)
>> print with newline at end
#func print_lni (iX) :(4 iX 0 0 intr0)@#(7 0 0 0 intr0)
#func print_lnd (dX) :(5 dX 0 0 intr0)@#(7 0 0 0 intr0)
#func print_lns (sX) :(6 sX 0 0 intr0)@#(7 0 0 0 intr0)
#func print_n (NONE) :(7 0 0 0 intr0)
#func detime (iDTIME) :(8 iDTIME 0 0 intr0)
#func input_i (iX) :(9 iX 0 0 intr0)
#func input_d (dX) :(10 dX 0 0 intr0)
#func input_s (iLEN, sX) :(11 iLEN sX 0 intr0)
#func shell_args (iX) :(12 iX 0 0 intr0)
#func get_shell_arg (iINDEX, sX) :(13 iINDEX sX 0 intr0)
#func show_st_p (NONE) :(14 0 0 0 intr0)
#func cpu_core (iX) :(15 iX 0 0 intr0)
#func get_host_endianess (iX) :(16 iX 0 0 intr0)
#func get_time (iTHOUR, iTMIN, iTSEC) :(17 iTHOUR iTMIN iTSEC intr0)
#func get_date (iDYEAR, iDMONTH, iDDAY) :(18 iDYEAR iDMONTH iDDAY intr0)
#func weekday (iX) :(19 iX 0 0 intr0)
>> print
#func printf_i (iFORM, iNUM) :(20 iNUM iFORM 0 intr0)
#func printf_d (iFORM, dNUM) :(21 dNUM iFORM 0 intr0)
#func print_16 (iNUM) :(22 iNUM 0 0 intr0)
#func print_32 (iNUM) :(23 iNUM 0 0 intr0)
>> timer
#func start_timer (NONE) :(24 0 0 0 intr0)
#func stop_timer (iTIME) :(25 iTIME 0 0 intr0)
#func stack_check (NONE) :(26 0 0 0 intr0)
#func debug (NONE) :(27 0 0 0 intr0)
#func overflow_d (iNUM) :(251 iNUM 0 0 intr0)
#func get_overflow (iFLAG) :(252 iFLAG 0 0 intr0)
>> JIT-compiler
#func run_jit_comp (iSLAB, iELAB, iCODE) :(253 iSLAB iELAB iCODE intr0)
#func run_jit_code (iCODE) :(254 iCODE 0 0 intr0)
>> variable range checks
#func range_int (iVAR, iMIN, iMAX) :(28 iVAR iMIN iMAX intr0)
#func range_double (dVAR, dMIN, dMAX) :(29 dVAR dMIN dMAX intr0)
#func check_pointer (iPVAR, iTYPE) :(30 iPVAR iTYPE 0 intr0)
#func pointer_type (iPVAR, iTYPE) :(31 iPVAR iTYPE 0 intr0)
#func stack_type (iSTTYPE) :(32 iSTTYPE 0 0 intr0)
#func get_size (iPVAR, iSIZE) :(33 iPVAR iSIZE 0 intr0)
#func string_immutable (iSTRINGPOINTER) :(34 iSTRINGPOINTER 0 0 intr0)
#func get_host_cpu (iHOST_CPU) :(35 iHOST_CPU 0 0 intr0)
#func get_host_os (iHOST_OS) :(36 iHOST_OS 0 0 intr0)
>>
>>	intr1
>>
#func threadexit (iRETCODE) :(255 iRETCODE 0 0 intr1)
#func thread (iXL) :(0 iXL 0 0 intr1)
#func join (NONE) :(1 0 0 0 intr1)
#func threadlock (NONE) :(2 0 0 0 intr1)
#func threadunlock (NONE) :(3 0 0 0 intr1)
#func get_cpu (iCURRENT) :(4 iCURRENT 0 0 intr1)
#func free_cpus (iNUMBER) :(5 iNUMBER 0 0 intr1)
#func globallock (iNUMBER) :(6 iNUMBER 0 0 intr1)
#func globalunlock (iNUMBER) :(7 iNUMBER 0 0 intr1)
#func data_local_alloc (NONE) :(8 0 0 0 intr1)
#func data_local (NONE) :(9 0 0 0 intr1)
#func data_global (NONE) :(10 0 0 0 intr1)
#func exit (iRETCODE) :(255 iRETCODE 0 0 intr0)
